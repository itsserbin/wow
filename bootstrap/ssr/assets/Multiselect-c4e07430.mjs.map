{"version":3,"file":"Multiselect-c4e07430.mjs","sources":["../../../resources/js/Components/Multiselect/multiselectMixin.js","../../../resources/js/Components/Multiselect/pointerMixin.js","../../../resources/js/Components/Multiselect/Multiselect.vue"],"sourcesContent":["function isEmpty(opt) {\n    if (opt === 0) return false\n    if (Array.isArray(opt) && opt.length === 0) return true\n    return !opt\n}\n\nfunction not(fun) {\n    return (...params) => !fun(...params)\n}\n\nfunction includes(str, query) {\n    /* istanbul ignore else */\n    if (str === undefined) str = 'undefined'\n    if (str === null) str = 'null'\n    if (str === false) str = 'false'\n    const text = str.toString().toLowerCase()\n    return text.indexOf(query.trim()) !== -1\n}\n\nfunction filterOptions(options, search, label, customLabel) {\n    return search ? options\n        .filter((option) => includes(customLabel(option, label), search))\n        .sort((a, b) => customLabel(a, label).length - customLabel(b, label).length) : options\n}\n\nfunction stripGroups(options) {\n    return options.filter((option) => !option.$isLabel)\n}\n\nfunction flattenOptions(values, label) {\n    return (options) =>\n        options.reduce((prev, curr) => {\n            /* istanbul ignore else */\n            if (curr[values] && curr[values].length) {\n                prev.push({\n                    $groupLabel: curr[label],\n                    $isLabel: true\n                })\n                return prev.concat(curr[values])\n            }\n            return prev\n        }, [])\n}\n\nfunction filterGroups(search, label, values, groupLabel, customLabel) {\n    return (groups) =>\n        groups.map((group) => {\n            /* istanbul ignore else */\n            if (!group[values]) {\n                console.warn(`Options passed to vue-multiselect do not contain groups, despite the config.`)\n                return []\n            }\n            const groupOptions = filterOptions(group[values], search, label, customLabel)\n\n            return groupOptions.length\n                ? {\n                    [groupLabel]: group[groupLabel],\n                    [values]: groupOptions\n                }\n                : []\n        })\n}\n\nconst flow = (...fns) => (x) => fns.reduce((v, f) => f(v), x)\n\nexport default {\n    data() {\n        return {\n            search: '',\n            isOpen: false,\n            preferredOpenDirection: 'below',\n            optimizedHeight: this.maxHeight\n        }\n    },\n    props: {\n        /**\n         * Decide whether to filter the results based on search query.\n         * Useful for async filtering, where we search through more complex data.\n         * @type {Boolean}\n         */\n        internalSearch: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Array of available options: Objects, Strings or Integers.\n         * If array of objects, visible label will default to option.label.\n         * If `labal` prop is passed, label will equal option['label']\n         * @type {Array}\n         */\n        options: {\n            type: Array,\n            required: true\n        },\n        /**\n         * Equivalent to the `multiple` attribute on a `<select>` input.\n         * @default false\n         * @type {Boolean}\n         */\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Key to compare objects\n         * @default 'id'\n         * @type {String}\n         */\n        trackBy: {\n            type: String\n        },\n        /**\n         * Label to look for in option Object\n         * @default 'label'\n         * @type {String}\n         */\n        label: {\n            type: String\n        },\n        /**\n         * Enable/disable search in options\n         * @default true\n         * @type {Boolean}\n         */\n        searchable: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Clear the search input after `)\n         * @default true\n         * @type {Boolean}\n         */\n        clearOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Hide already selected options\n         * @default false\n         * @type {Boolean}\n         */\n        hideSelected: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Equivalent to the `placeholder` attribute on a `<select>` input.\n         * @default 'Select option'\n         * @type {String}\n         */\n        placeholder: {\n            type: String,\n            default: 'Select option'\n        },\n        /**\n         * Allow to remove all selected values\n         * @default true\n         * @type {Boolean}\n         */\n        allowEmpty: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Reset this.internalValue, this.search after this.internalValue changes.\n         * Useful if want to create a stateless dropdown.\n         * @default false\n         * @type {Boolean}\n         */\n        resetAfter: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Enable/disable closing after selecting an option\n         * @default true\n         * @type {Boolean}\n         */\n        closeOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Function to interpolate the custom label\n         * @default false\n         * @type {Function}\n         */\n        customLabel: {\n            type: Function,\n            default(option, label) {\n                if (isEmpty(option)) return ''\n                return label ? option[label] : option\n            }\n        },\n        /**\n         * Disable / Enable tagging\n         * @default false\n         * @type {Boolean}\n         */\n        taggable: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * String to show when highlighting a potential tag\n         * @default 'Press enter to create a tag'\n         * @type {String}\n         */\n        tagPlaceholder: {\n            type: String,\n            default: 'Press enter to create a tag'\n        },\n        /**\n         * By default new tags will appear above the search results.\n         * Changing to 'bottom' will revert this behaviour\n         * and will proritize the search results\n         * @default 'top'\n         * @type {String}\n         */\n        tagPosition: {\n            type: String,\n            default: 'top'\n        },\n        /**\n         * Number of allowed selected options. No limit if 0.\n         * @default 0\n         * @type {Number}\n         */\n        max: {\n            type: [Number, Boolean],\n            default: false\n        },\n        /**\n         * Will be passed with all events as second param.\n         * Useful for identifying events origin.\n         * @default null\n         * @type {String|Integer}\n         */\n        id: {\n            default: null\n        },\n        /**\n         * Limits the options displayed in the dropdown\n         * to the first X options.\n         * @default 1000\n         * @type {Integer}\n         */\n        optionsLimit: {\n            type: Number,\n            default: 1000\n        },\n        /**\n         * Name of the property containing\n         * the group values\n         * @default 1000\n         * @type {String}\n         */\n        groupValues: {\n            type: String\n        },\n        /**\n         * Name of the property containing\n         * the group label\n         * @default 1000\n         * @type {String}\n         */\n        groupLabel: {\n            type: String\n        },\n        /**\n         * Allow to select all group values\n         * by selecting the group label\n         * @default false\n         * @type {Boolean}\n         */\n        groupSelect: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Array of keyboard keys to block\n         * when selecting\n         * @default 1000\n         * @type {String}\n         */\n        blockKeys: {\n            type: Array,\n            default() {\n                return []\n            }\n        },\n        /**\n         * Prevent from wiping up the search value\n         * @default false\n         * @type {Boolean}\n         */\n        preserveSearch: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Select 1st options if value is empty\n         * @default false\n         * @type {Boolean}\n         */\n        preselectFirst: {\n            type: Boolean,\n            default: false\n        }\n    },\n    mounted() {\n        /* istanbul ignore else */\n        if (!this.multiple && this.max) {\n            console.warn('[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false.')\n        }\n        if (\n            this.preselectFirst &&\n            !this.internalValue.length &&\n            this.options.length\n        ) {\n            this.select(this.filteredOptions[0])\n        }\n    },\n    computed: {\n        internalValue() {\n            return this.modelValue || this.modelValue === 0\n                ? Array.isArray(this.modelValue) ? this.modelValue : [this.modelValue]\n                : []\n        },\n        filteredOptions() {\n            const search = this.search || ''\n            const normalizedSearch = search.toLowerCase().trim()\n\n            let options = this.options.concat()\n\n            /* istanbul ignore else */\n            if (this.internalSearch) {\n                options = this.groupValues\n                    ? this.filterAndFlat(options, normalizedSearch, this.label)\n                    : filterOptions(options, normalizedSearch, this.label, this.customLabel)\n            } else {\n                options = this.groupValues ? flattenOptions(this.groupValues, this.groupLabel)(options) : options\n            }\n\n            options = this.hideSelected\n                ? options.filter(not(this.isSelected))\n                : options\n\n            /* istanbul ignore else */\n            if (this.taggable && normalizedSearch.length && !this.isExistingOption(normalizedSearch)) {\n                if (this.tagPosition === 'bottom') {\n                    options.push({isTag: true, label: search})\n                } else {\n                    options.unshift({isTag: true, label: search})\n                }\n            }\n\n            return options.slice(0, this.optionsLimit)\n        },\n        valueKeys() {\n            if (this.trackBy) {\n                return this.internalValue.map((element) => element[this.trackBy])\n            } else {\n                return this.internalValue\n            }\n        },\n        optionKeys() {\n            const options = this.groupValues ? this.flatAndStrip(this.options) : this.options\n            return options.map((element) => this.customLabel(element, this.label).toString().toLowerCase())\n        },\n        currentOptionLabel() {\n            return this.multiple\n                ? this.searchable ? '' : this.placeholder\n                : this.internalValue.length\n                    ? this.getOptionLabel(this.internalValue[0])\n                    : this.searchable ? '' : this.placeholder\n        }\n    },\n    watch: {\n        internalValue() {\n            /* istanbul ignore else */\n            if (this.resetAfter && this.internalValue.length) {\n                this.search = ''\n                this.$emit('update:modelValue', this.multiple ? [] : null)\n            }\n        },\n        search() {\n            this.$emit('search-change', this.search)\n        }\n    },\n    emits: ['open', 'search-change', 'close', 'select', 'update:modelValue', 'remove', 'tag'],\n    methods: {\n        /**\n         * Returns the internalValue in a way it can be emited to the parent\n         * @returns {Object||Array||String||Integer}\n         */\n        getValue() {\n            return this.multiple\n                ? this.internalValue\n                : this.internalValue.length === 0\n                    ? null\n                    : this.internalValue[0]\n        },\n        /**\n         * Filters and then flattens the options list\n         * @param  {Array}\n         * @return {Array} returns a filtered and flat options list\n         */\n        filterAndFlat(options, search, label) {\n            return flow(\n                filterGroups(search, label, this.groupValues, this.groupLabel, this.customLabel),\n                flattenOptions(this.groupValues, this.groupLabel)\n            )(options)\n        },\n        /**\n         * Flattens and then strips the group labels from the options list\n         * @param  {Array}\n         * @return {Array} returns a flat options list without group labels\n         */\n        flatAndStrip(options) {\n            return flow(\n                flattenOptions(this.groupValues, this.groupLabel),\n                stripGroups\n            )(options)\n        },\n        /**\n         * Updates the search value\n         * @param  {String}\n         */\n        updateSearch(query) {\n            this.search = query\n        },\n        /**\n         * Finds out if the given query is already present\n         * in the available options\n         * @param  {String}\n         * @return {Boolean} returns true if element is available\n         */\n        isExistingOption(query) {\n            return !this.options\n                ? false\n                : this.optionKeys.indexOf(query) > -1\n        },\n        /**\n         * Finds out if the given element is already present\n         * in the result value\n         * @param  {Object||String||Integer} option passed element to check\n         * @returns {Boolean} returns true if element is selected\n         */\n        isSelected(option) {\n            const opt = this.trackBy\n                ? option[this.trackBy]\n                : option\n            return this.valueKeys.indexOf(opt) > -1\n        },\n        /**\n         * Finds out if the given option is disabled\n         * @param  {Object||String||Integer} option passed element to check\n         * @returns {Boolean} returns true if element is disabled\n         */\n        isOptionDisabled(option) {\n            return !!option.$isDisabled\n        },\n        /**\n         * Returns empty string when options is null/undefined\n         * Returns tag query if option is tag.\n         * Returns the customLabel() results and casts it to string.\n         *\n         * @param  {Object||String||Integer} Passed option\n         * @returns {Object||String}\n         */\n        getOptionLabel(option) {\n            if (isEmpty(option)) return ''\n            /* istanbul ignore else */\n            if (option.isTag) return option.label\n            /* istanbul ignore else */\n            if (option.$isLabel) return option.$groupLabel\n\n            const label = this.customLabel(option, this.label)\n            /* istanbul ignore else */\n            if (isEmpty(label)) return ''\n            return label\n        },\n        /**\n         * Add the given option to the list of selected options\n         * or sets the option as the selected option.\n         * If option is already selected -> remove it from the results.\n         *\n         * @param  {Object||String||Integer} option to select/deselect\n         * @param  {Boolean} block removing\n         */\n        select(option, key) {\n            /* istanbul ignore else */\n            if (option.$isLabel && this.groupSelect) {\n                this.selectGroup(option)\n                return\n            }\n            if (this.blockKeys.indexOf(key) !== -1 ||\n                this.disabled ||\n                option.$isDisabled ||\n                option.$isLabel\n            ) return\n            /* istanbul ignore else */\n            if (this.max && this.multiple && this.internalValue.length === this.max) return\n            /* istanbul ignore else */\n            if (key === 'Tab' && !this.pointerDirty) return\n            if (option.isTag) {\n                this.$emit('tag', option.label, this.id)\n                this.search = ''\n                if (this.closeOnSelect && !this.multiple) this.deactivate()\n            } else {\n                const isSelected = this.isSelected(option)\n\n                if (isSelected) {\n                    if (key !== 'Tab') this.removeElement(option)\n                    return\n                }\n\n                this.$emit('select', option, this.id)\n\n                if (this.multiple) {\n                    this.$emit('update:modelValue', this.internalValue.concat([option]))\n                } else {\n                    this.$emit('update:modelValue', option)\n                }\n\n                /* istanbul ignore else */\n                if (this.clearOnSelect) this.search = ''\n            }\n            /* istanbul ignore else */\n            if (this.closeOnSelect) this.deactivate()\n        },\n        /**\n         * Add the given group options to the list of selected options\n         * If all group optiona are already selected -> remove it from the results.\n         *\n         * @param  {Object||String||Integer} group to select/deselect\n         */\n        selectGroup(selectedGroup) {\n            const group = this.options.find((option) => {\n                return option[this.groupLabel] === selectedGroup.$groupLabel\n            })\n\n            if (!group) return\n\n            if (this.wholeGroupSelected(group)) {\n                this.$emit('remove', group[this.groupValues], this.id)\n\n                const newValue = this.internalValue.filter(\n                    (option) => group[this.groupValues].indexOf(option) === -1\n                )\n\n                this.$emit('update:modelValue', newValue)\n            } else {\n                const optionsToAdd = group[this.groupValues].filter(\n                    (option) => !(this.isOptionDisabled(option) || this.isSelected(option))\n                )\n\n                this.$emit('select', optionsToAdd, this.id)\n                this.$emit(\n                    'update:modelValue',\n                    this.internalValue.concat(optionsToAdd)\n                )\n            }\n\n            if (this.closeOnSelect) this.deactivate()\n        },\n        /**\n         * Helper to identify if all values in a group are selected\n         *\n         * @param {Object} group to validated selected values against\n         */\n        wholeGroupSelected(group) {\n            return group[this.groupValues].every((option) => this.isSelected(option) || this.isOptionDisabled(option)\n            )\n        },\n        /**\n         * Helper to identify if all values in a group are disabled\n         *\n         * @param {Object} group to check for disabled values\n         */\n        wholeGroupDisabled(group) {\n            return group[this.groupValues].every(this.isOptionDisabled)\n        },\n        /**\n         * Removes the given option from the selected options.\n         * Additionally checks this.allowEmpty prop if option can be removed when\n         * it is the last selected option.\n         *\n         * @param  {type} option description\n         * @return {type}        description\n         */\n        removeElement(option, shouldClose = true) {\n            /* istanbul ignore else */\n            if (this.disabled) return\n            /* istanbul ignore else */\n            if (option.$isDisabled) return\n            /* istanbul ignore else */\n            if (!this.allowEmpty && this.internalValue.length <= 1) {\n                this.deactivate()\n                return\n            }\n\n            const index = typeof option === 'object'\n                ? this.valueKeys.indexOf(option[this.trackBy])\n                : this.valueKeys.indexOf(option)\n\n            this.$emit('remove', option, this.id)\n            if (this.multiple) {\n                const newValue = this.internalValue.slice(0, index).concat(this.internalValue.slice(index + 1))\n                this.$emit('update:modelValue', newValue)\n            } else {\n                this.$emit('update:modelValue', null)\n            }\n\n            /* istanbul ignore else */\n            if (this.closeOnSelect && shouldClose) this.deactivate()\n        },\n        /**\n         * Calls this.removeElement() with the last element\n         * from this.internalValue (selected element Array)\n         *\n         * @fires this#removeElement\n         */\n        removeLastElement() {\n            /* istanbul ignore else */\n            if (this.blockKeys.indexOf('Delete') !== -1) return\n            /* istanbul ignore else */\n            if (this.search.length === 0 && Array.isArray(this.internalValue) && this.internalValue.length) {\n                this.removeElement(this.internalValue[this.internalValue.length - 1], false)\n            }\n        },\n        /**\n         * Opens the multiselect’s dropdown.\n         * Sets this.isOpen to TRUE\n         */\n        activate() {\n            /* istanbul ignore else */\n            if (this.isOpen || this.disabled) return\n\n            this.adjustPosition()\n            /* istanbul ignore else  */\n            if (this.groupValues && this.pointer === 0 && this.filteredOptions.length) {\n                this.pointer = 1\n            }\n\n            this.isOpen = true\n            /* istanbul ignore else  */\n            if (this.searchable) {\n                if (!this.preserveSearch) this.search = ''\n                this.$nextTick(() => this.$refs.search && this.$refs.search.focus())\n            } else {\n                this.$el.focus()\n            }\n            this.$emit('open', this.id)\n        },\n        /**\n         * Closes the multiselect’s dropdown.\n         * Sets this.isOpen to FALSE\n         */\n        deactivate() {\n            /* istanbul ignore else */\n            if (!this.isOpen) return\n\n            this.isOpen = false\n            /* istanbul ignore else  */\n            if (this.searchable) {\n                this.$refs.search && this.$refs.search.blur()\n            } else {\n                this.$el.blur()\n            }\n            if (!this.preserveSearch) this.search = ''\n            this.$emit('close', this.getValue(), this.id)\n        },\n        /**\n         * Call this.activate() or this.deactivate()\n         * depending on this.isOpen value.\n         *\n         * @fires this#activate || this#deactivate\n         * @property {Boolean} isOpen indicates if dropdown is open\n         */\n        toggle() {\n            this.isOpen\n                ? this.deactivate()\n                : this.activate()\n        },\n        /**\n         * Updates the hasEnoughSpace variable used for\n         * detecting where to expand the dropdown\n         */\n        adjustPosition() {\n            if (typeof window === 'undefined') return\n\n            const spaceAbove = this.$el.getBoundingClientRect().top\n            const spaceBelow = window.innerHeight - this.$el.getBoundingClientRect().bottom\n            const hasEnoughSpaceBelow = spaceBelow > this.maxHeight\n\n            if (hasEnoughSpaceBelow || spaceBelow > spaceAbove || this.openDirection === 'below' || this.openDirection === 'bottom') {\n                this.preferredOpenDirection = 'below'\n                this.optimizedHeight = Math.min(spaceBelow - 40, this.maxHeight)\n            } else {\n                this.preferredOpenDirection = 'above'\n                this.optimizedHeight = Math.min(spaceAbove - 40, this.maxHeight)\n            }\n        }\n    }\n}\n","export default {\n    data() {\n        return {\n            pointer: 0,\n            pointerDirty: false\n        }\n    },\n    props: {\n        /**\n         * Enable/disable highlighting of the pointed value.\n         * @type {Boolean}\n         * @default true\n         */\n        showPointer: {\n            type: Boolean,\n            default: true\n        },\n        optionHeight: {\n            type: Number,\n            default: 40\n        }\n    },\n    computed: {\n        pointerPosition() {\n            return this.pointer * this.optionHeight\n        },\n        visibleElements() {\n            return this.optimizedHeight / this.optionHeight\n        }\n    },\n    watch: {\n        filteredOptions() {\n            this.pointerAdjust()\n        },\n        isOpen() {\n            this.pointerDirty = false\n        },\n        pointer() {\n            this.$refs.search && this.$refs.search.setAttribute('aria-activedescendant', this.id + '-' + this.pointer.toString())\n        }\n    },\n    methods: {\n        optionHighlight(index, option) {\n            return {\n                'multiselect__option--highlight': index === this.pointer && this.showPointer,\n                'multiselect__option--selected': this.isSelected(option)\n            }\n        },\n        groupHighlight(index, selectedGroup) {\n            if (!this.groupSelect) {\n                return [\n                    'multiselect__option--disabled',\n                    {'multiselect__option--group': selectedGroup.$isLabel}\n                ]\n            }\n\n            const group = this.options.find((option) => {\n                return option[this.groupLabel] === selectedGroup.$groupLabel\n            })\n\n            return group && !this.wholeGroupDisabled(group) ? [\n                'multiselect__option--group',\n                {'multiselect__option--highlight': index === this.pointer && this.showPointer},\n                {'multiselect__option--group-selected': this.wholeGroupSelected(group)}\n            ] : 'multiselect__option--disabled'\n        },\n        addPointerElement({key} = 'Enter') {\n            /* istanbul ignore else */\n            if (this.filteredOptions.length > 0) {\n                this.select(this.filteredOptions[this.pointer], key)\n            }\n            this.pointerReset()\n        },\n        pointerForward() {\n            /* istanbul ignore else */\n            if (this.pointer < this.filteredOptions.length - 1) {\n                this.pointer++\n                /* istanbul ignore next */\n                if (this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight) {\n                    this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight\n                }\n                /* istanbul ignore else */\n                if (\n                    this.filteredOptions[this.pointer] &&\n                    this.filteredOptions[this.pointer].$isLabel &&\n                    !this.groupSelect\n                ) this.pointerForward()\n            }\n            this.pointerDirty = true\n        },\n        pointerBackward() {\n            if (this.pointer > 0) {\n                this.pointer--\n                /* istanbul ignore else */\n                if (this.$refs.list.scrollTop >= this.pointerPosition) {\n                    this.$refs.list.scrollTop = this.pointerPosition\n                }\n                /* istanbul ignore else */\n                if (\n                    this.filteredOptions[this.pointer] &&\n                    this.filteredOptions[this.pointer].$isLabel &&\n                    !this.groupSelect\n                ) this.pointerBackward()\n            } else {\n                /* istanbul ignore else */\n                if (\n                    this.filteredOptions[this.pointer] &&\n                    this.filteredOptions[0].$isLabel &&\n                    !this.groupSelect\n                ) this.pointerForward()\n            }\n            this.pointerDirty = true\n        },\n        pointerReset() {\n            /* istanbul ignore else */\n            if (!this.closeOnSelect) return\n            this.pointer = 0\n            /* istanbul ignore else */\n            if (this.$refs.list) {\n                this.$refs.list.scrollTop = 0\n            }\n        },\n        pointerAdjust() {\n            /* istanbul ignore else */\n            if (this.pointer >= this.filteredOptions.length - 1) {\n                this.pointer = this.filteredOptions.length\n                    ? this.filteredOptions.length - 1\n                    : 0\n            }\n\n            if (this.filteredOptions.length > 0 &&\n                this.filteredOptions[this.pointer].$isLabel &&\n                !this.groupSelect\n            ) {\n                this.pointerForward()\n            }\n        },\n        pointerSet(index) {\n            this.pointer = index\n            this.pointerDirty = true\n        }\n    }\n}\n","<script>\nimport multiselectMixin from './multiselectMixin'\nimport pointerMixin from './pointerMixin'\n\nexport default {\n    name: 'vue-multiselect',\n    mixins: [multiselectMixin, pointerMixin],\n    props: {\n        /**\n         * name attribute to match optional label element\n         * @default ''\n         * @type {String}\n         */\n        name: {\n            type: String,\n            default: ''\n        },\n        /**\n         * Presets the selected options value.\n         * @type {Object||Array||String||Integer}\n         */\n        modelValue: {\n            type: null,\n            default() {\n                return []\n            }\n        },\n        /**\n         * String to show when pointing to an option\n         * @default 'Press enter to select'\n         * @type {String}\n         */\n        selectLabel: {\n            type: String,\n            default: 'Press enter to select'\n        },\n        /**\n         * String to show when pointing to an option\n         * @default 'Press enter to select'\n         * @type {String}\n         */\n        selectGroupLabel: {\n            type: String,\n            default: 'Press enter to select group'\n        },\n        /**\n         * String to show next to selected option\n         * @default 'Selected'\n         * @type {String}\n         */\n        selectedLabel: {\n            type: String,\n            default: 'Selected'\n        },\n        /**\n         * String to show when pointing to an already selected option\n         * @default 'Press enter to remove'\n         * @type {String}\n         */\n        deselectLabel: {\n            type: String,\n            default: 'Press enter to remove'\n        },\n        /**\n         * String to show when pointing to an already selected option\n         * @default 'Press enter to remove'\n         * @type {String}\n         */\n        deselectGroupLabel: {\n            type: String,\n            default: 'Press enter to deselect group'\n        },\n        /**\n         * Decide whether to show pointer labels\n         * @default true\n         * @type {Boolean}\n         */\n        showLabels: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Limit the display of selected options. The rest will be hidden within the limitText string.\n         * @default 99999\n         * @type {Integer}\n         */\n        limit: {\n            type: Number,\n            default: 99999\n        },\n        /**\n         * Sets maxHeight style value of the dropdown\n         * @default 300\n         * @type {Integer}\n         */\n        maxHeight: {\n            type: Number,\n            default: 300\n        },\n        /**\n         * Function that process the message shown when selected\n         * elements pass the defined limit.\n         * @default 'and * more'\n         * @param {Int} count Number of elements more than limit\n         * @type {Function}\n         */\n        limitText: {\n            type: Function,\n            default: (count) => `and ${count} more`\n        },\n        /**\n         * Set true to trigger the loading spinner.\n         * @default False\n         * @type {Boolean}\n         */\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Disables the multiselect if true.\n         * @default false\n         * @type {Boolean}\n         */\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Fixed opening direction\n         * @default ''\n         * @type {String}\n         */\n        openDirection: {\n            type: String,\n            default: ''\n        },\n        /**\n         * Shows slot with message about empty options\n         * @default true\n         * @type {Boolean}\n         */\n        showNoOptions: {\n            type: Boolean,\n            default: true\n        },\n        showNoResults: {\n            type: Boolean,\n            default: true\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    computed: {\n        isSingleLabelVisible() {\n            return (\n                (this.singleValue || this.singleValue === 0) &&\n                (!this.isOpen || !this.searchable) &&\n                !this.visibleValues.length\n            )\n        },\n        isPlaceholderVisible() {\n            return !this.internalValue.length && (!this.searchable || !this.isOpen)\n        },\n        visibleValues() {\n            return this.multiple ? this.internalValue.slice(0, this.limit) : []\n        },\n        singleValue() {\n            return this.internalValue[0]\n        },\n        deselectLabelText() {\n            return this.showLabels ? this.deselectLabel : ''\n        },\n        deselectGroupLabelText() {\n            return this.showLabels ? this.deselectGroupLabel : ''\n        },\n        selectLabelText() {\n            return this.showLabels ? this.selectLabel : ''\n        },\n        selectGroupLabelText() {\n            return this.showLabels ? this.selectGroupLabel : ''\n        },\n        selectedLabelText() {\n            return this.showLabels ? this.selectedLabel : ''\n        },\n        inputStyle() {\n            if (\n                this.searchable ||\n                (this.multiple && this.modelValue && this.modelValue.length)\n            ) {\n                // Hide input by setting the width to 0 allowing it to receive focus\n                return this.isOpen\n                    ? {width: '100%'}\n                    : {width: '0', position: 'absolute', padding: '0'}\n            }\n            return ''\n        },\n        contentStyle() {\n            return this.options.length\n                ? {display: 'inline-block'}\n                : {display: 'block'}\n        },\n        isAbove() {\n            if (this.openDirection === 'above' || this.openDirection === 'top') {\n                return true\n            } else if (\n                this.openDirection === 'below' ||\n                this.openDirection === 'bottom'\n            ) {\n                return false\n            } else {\n                return this.preferredOpenDirection === 'above'\n            }\n        },\n        showSearchInput() {\n            return (\n                this.searchable &&\n                (this.hasSingleSelectedSlot &&\n                (this.visibleSingleValue || this.visibleSingleValue === 0)\n                    ? this.isOpen\n                    : true)\n            )\n        }\n    }\n}\n</script>\n\n<template>\n    <div\n        :tabindex=\"searchable ? -1 : tabindex\"\n        :class=\"{ 'multiselect--active': isOpen, 'multiselect--disabled': disabled, 'multiselect--above': isAbove }\"\n        @focus=\"activate()\"\n        @blur=\"searchable ? false : deactivate()\"\n        @keydown.self.down.prevent=\"pointerForward()\"\n        @keydown.self.up.prevent=\"pointerBackward()\"\n        @keypress.enter.tab.stop.self=\"addPointerElement($event)\"\n        @keyup.esc=\"deactivate()\"\n        class=\"multiselect\"\n        role=\"combobox\"\n        :aria-owns=\"'listbox-'+id\">\n        <slot name=\"caret\" :toggle=\"toggle\">\n            <div @mousedown.prevent.stop=\"toggle()\" class=\"multiselect__select\"></div>\n        </slot>\n        <slot name=\"clear\" :search=\"search\"></slot>\n        <div ref=\"tags\" class=\"multiselect__tags bg-white dark:bg-gray-800 rounded-lg p-5\">\n            <slot\n                name=\"selection\"\n                :search=\"search\"\n                :remove=\"removeElement\"\n                :values=\"visibleValues\"\n                :is-open=\"isOpen\"\n            >\n                <div class=\"multiselect__tags-wrap\" v-show=\"visibleValues.length > 0\">\n                    <template v-for=\"(option, index) of visibleValues\" @mousedown.prevent>\n                        <slot name=\"tag\" :option=\"option\" :search=\"search\" :remove=\"removeElement\">\n              <span class=\"multiselect__tag\" :key=\"index\">\n                <span v-text=\"getOptionLabel(option)\"></span>\n                <i tabindex=\"1\" @keypress.enter.prevent=\"removeElement(option)\"\n                   @mousedown.prevent=\"removeElement(option)\" class=\"multiselect__tag-icon\"></i>\n              </span>\n                        </slot>\n                    </template>\n                </div>\n                <template v-if=\"internalValue && internalValue.length > limit\">\n                    <slot name=\"limit\">\n                        <strong class=\"multiselect__strong\" v-text=\"limitText(internalValue.length - limit)\"/>\n                    </slot>\n                </template>\n            </slot>\n            <transition name=\"multiselect__loading\">\n                <slot name=\"loading\">\n                    <div v-show=\"loading\" class=\"multiselect__spinner\"/>\n                </slot>\n            </transition>\n            <input\n                ref=\"search\"\n                v-if=\"searchable\"\n                :name=\"name\"\n                :id=\"id\"\n                type=\"text\"\n                autocomplete=\"off\"\n                spellcheck=\"false\"\n                :placeholder=\"placeholder\"\n                :style=\"inputStyle\"\n                :value=\"search\"\n                :disabled=\"disabled\"\n                :tabindex=\"tabindex\"\n                @input=\"updateSearch($event.target.value)\"\n                @focus.prevent=\"activate()\"\n                @blur.prevent=\"deactivate()\"\n                @keyup.esc=\"deactivate()\"\n                @keydown.down.prevent=\"pointerForward()\"\n                @keydown.up.prevent=\"pointerBackward()\"\n                @keypress.enter.prevent.stop.self=\"addPointerElement($event)\"\n                @keydown.delete.stop=\"removeLastElement()\"\n                class=\"\n                        multiselect__input\n                        text-gray-900\n                        text-sm\n                        rounded-l\n                        block\n                        w-full\n                        h-5\n                        ring-0\n                        border-0\n                        dark:bg-gray-800\n                        dark:placeholder-gray-400\n                        dark:text-white\n                        dark:focus:text-white\n                        focus:ring-0\n                        focus:border-gray-700\n                        focus:pl-0\n                \"\n                :aria-controls=\"'listbox-'+id\"\n            />\n            <span\n                v-if=\"isSingleLabelVisible\"\n                class=\"multiselect__single text-gray-900 dark:text-white \"\n                @mousedown.prevent=\"toggle\"\n            >\n        <slot name=\"singleLabel\" :option=\"singleValue\">\n          {{ currentOptionLabel }}\n        </slot>\n      </span>\n            <span\n                v-if=\"isPlaceholderVisible\"\n                class=\"multiselect__placeholder  text-gray-900 dark:text-white\"\n                @mousedown.prevent=\"toggle\"\n            >\n        <slot name=\"placeholder\">\n          {{ placeholder }}\n        </slot>\n      </span>\n        </div>\n        <transition name=\"multiselect\">\n            <div\n                class=\"multiselect__content-wrapper\"\n                v-show=\"isOpen\"\n                @focus=\"activate\"\n                tabindex=\"-1\"\n                @mousedown.prevent\n                :style=\"{ maxHeight: optimizedHeight + 'px' }\"\n                ref=\"list\"\n            >\n                <ul class=\"multiselect__content bg-white dark:bg-gray-800 text-gray-900 dark:text-white dark:border-gray-700\"\n                    :style=\"contentStyle\" role=\"listbox\" :id=\"'listbox-'+id\">\n                    <slot name=\"beforeList\"></slot>\n                    <li v-if=\"multiple && max === internalValue.length\">\n            <span class=\"multiselect__option\">\n              <slot name=\"maxElements\">Maximum of {{ max }} options selected. First remove a selected option to select another.</slot>\n            </span>\n                    </li>\n                    <template v-if=\"!max || internalValue.length < max\">\n                        <li class=\"multiselect__element\"\n                            v-for=\"(option, index) of filteredOptions\"\n                            :key=\"index\"\n                            v-bind:id=\"id + '-' + index\"\n                            v-bind:role=\"!(option && (option.$isLabel || option.$isDisabled)) ? 'option' : null\">\n              <span\n                  v-if=\"!(option && (option.$isLabel || option.$isDisabled))\"\n                  :class=\"optionHighlight(index, option)\"\n                  @click.stop=\"select(option)\"\n                  @mouseenter.self=\"pointerSet(index)\"\n                  :data-select=\"option && option.isTag ? tagPlaceholder : selectLabelText\"\n                  :data-selected=\"selectedLabelText\"\n                  :data-deselect=\"deselectLabelText\"\n                  class=\"multiselect__option\">\n                <slot name=\"option\" :option=\"option\" :search=\"search\" :index=\"index\">\n                  <span>{{ getOptionLabel(option) }}</span>\n                </slot>\n              </span>\n                            <span\n                                v-if=\"option && (option.$isLabel || option.$isDisabled)\"\n                                :data-select=\"groupSelect && selectGroupLabelText\"\n                                :data-deselect=\"groupSelect && deselectGroupLabelText\"\n                                :class=\"groupHighlight(index, option)\"\n                                @mouseenter.self=\"groupSelect && pointerSet(index)\"\n                                @mousedown.prevent=\"selectGroup(option)\"\n                                class=\"multiselect__option\">\n                <slot name=\"option\" :option=\"option\" :search=\"search\" :index=\"index\">\n                  <span>{{ getOptionLabel(option) }}</span>\n                </slot>\n              </span>\n                        </li>\n                    </template>\n                    <li v-show=\"showNoResults && (filteredOptions.length === 0 && search && !loading)\">\n            <span class=\"multiselect__option\">\n              <slot name=\"noResult\" :search=\"search\">No elements found. Consider changing the search query.</slot>\n            </span>\n                    </li>\n                    <li v-show=\"showNoOptions && (options.length === 0 && !search && !loading)\">\n            <span class=\"multiselect__option\">\n              <slot name=\"noOptions\">List is empty.</slot>\n            </span>\n                    </li>\n                    <slot name=\"afterList\"></slot>\n                </ul>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n\nfieldset[disabled] .multiselect {\n    pointer-events: none;\n}\n\n.multiselect__spinner {\n    position: absolute;\n    right: 1px;\n    top: 1px;\n    width: 48px;\n    height: 35px;\n    background: #fff;\n    display: block;\n}\n\n.multiselect__spinner::before,\n.multiselect__spinner::after {\n    position: absolute;\n    content: \"\";\n    top: 50%;\n    left: 50%;\n    margin: -8px 0 0 -8px;\n    width: 16px;\n    height: 16px;\n    border-radius: 100%;\n    border-color: #41b883 transparent transparent;\n    border-style: solid;\n    border-width: 2px;\n    box-shadow: 0 0 0 1px transparent;\n}\n\n.multiselect__spinner::before {\n    animation: spinning 2.4s cubic-bezier(0.41, 0.26, 0.2, 0.62);\n    animation-iteration-count: infinite;\n}\n\n.multiselect__spinner::after {\n    animation: spinning 2.4s cubic-bezier(0.51, 0.09, 0.21, 0.8);\n    animation-iteration-count: infinite;\n}\n\n.multiselect__loading-enter-active,\n.multiselect__loading-leave-active {\n    transition: opacity 0.4s ease-in-out;\n    opacity: 1;\n}\n\n.multiselect__loading-enter,\n.multiselect__loading-leave-active {\n    opacity: 0;\n}\n\n.multiselect,\n.multiselect__input,\n.multiselect__single {\n    font-family: inherit;\n    font-size: 16px;\n    touch-action: manipulation;\n}\n\n.multiselect {\n    box-sizing: content-box;\n    display: block;\n    position: relative;\n    width: 100%;\n    min-height: 40px;\n    text-align: left;\n    color: #35495e;\n}\n\n.multiselect * {\n    box-sizing: border-box;\n}\n\n.multiselect:focus {\n    outline: none;\n}\n\n.multiselect--disabled {\n    background: #ededed;\n    pointer-events: none;\n    opacity: 0.6;\n}\n\n.multiselect--active {\n    z-index: 50;\n}\n\n/*.multiselect--active:not(.multiselect--above) .multiselect__current,*/\n/*.multiselect--active:not(.multiselect--above) .multiselect__input,*/\n/*.multiselect--active:not(.multiselect--above) .multiselect__tags {*/\n/*   border-radius: 5px;*/\n/*}*/\n\n.multiselect--active .multiselect__select {\n    transform: rotateZ(180deg);\n}\n\n.multiselect--above.multiselect--active .multiselect__current,\n.multiselect--above.multiselect--active .multiselect__input,\n.multiselect--above.multiselect--active .multiselect__tags {\n    /*border: 0;*/\n    /*border-top-left-radius: 0;*/\n    /*border-top-right-radius: 0;*/\n}\n\n.multiselect__input,\n.multiselect__single {\n    position: relative;\n    display: inline-block;\n    min-height: 20px;\n    line-height: 20px;\n    width: calc(100%);\n    transition: border 0.1s ease;\n    box-sizing: border-box;\n    vertical-align: top;\n}\n\n.multiselect__input::placeholder {\n    color: #35495e;\n}\n\n.multiselect__tag ~ .multiselect__input,\n.multiselect__tag ~ .multiselect__single {\n    width: auto;\n}\n\n.multiselect__input:hover,\n.multiselect__single:hover {\n    border-color: #cfcfcf;\n}\n\n.multiselect__input:focus,\n.multiselect__single:focus {\n    border-color: #a8a8a8;\n    outline: none;\n}\n\n.multiselect__single {\n    padding-left: 5px;\n    margin-bottom: 8px;\n}\n\n.multiselect__tags-wrap {\n    display: inline;\n}\n\n.multiselect__tags {\n    min-height: 40px;\n    display: block;\n    padding: 8px 40px 0 8px;\n    border-radius: 5px;\n    border: 1px solid #e8e8e8;\n    /*background: #fff;*/\n    font-size: 14px;\n}\n\n.multiselect__tag {\n    position: relative;\n    display: inline-block;\n    padding: 4px 26px 4px 10px;\n    border-radius: 5px;\n    margin-right: 10px;\n    color: #fff;\n    line-height: 1;\n    background: #41b883;\n    margin-bottom: 5px;\n    white-space: nowrap;\n    overflow: hidden;\n    max-width: 100%;\n    text-overflow: ellipsis;\n}\n\n.multiselect__tag-icon {\n    cursor: pointer;\n    margin-left: 7px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    font-weight: 700;\n    font-style: initial;\n    width: 22px;\n    text-align: center;\n    line-height: 22px;\n    transition: all 0.2s ease;\n    border-radius: 5px;\n}\n\n.multiselect__tag-icon::after {\n    content: \"×\";\n    color: #266d4d;\n    font-size: 14px;\n}\n\n/* // Remove these lines to avoid green closing button\n//.multiselect__tag-icon:focus,\n//.multiselect__tag-icon:hover {\n//  background: #369a6e;\n//} */\n\n.multiselect__tag-icon:focus::after,\n.multiselect__tag-icon:hover::after {\n    color: white;\n}\n\n.multiselect__current {\n    line-height: 16px;\n    min-height: 40px;\n    box-sizing: border-box;\n    display: block;\n    overflow: hidden;\n    padding: 8px 12px 0;\n    padding-right: 30px;\n    white-space: nowrap;\n    margin: 0;\n    text-decoration: none;\n    border-radius: 5px;\n    border: 1px solid #e8e8e8;\n    cursor: pointer;\n}\n\n.multiselect__select {\n    line-height: 16px;\n    display: block;\n    position: absolute;\n    box-sizing: border-box;\n    width: 40px;\n    height: 38px;\n    right: 1px;\n    top: 1px;\n    padding: 4px 8px;\n    margin: 0;\n    text-decoration: none;\n    text-align: center;\n    cursor: pointer;\n    transition: transform 0.2s ease;\n}\n\n.multiselect__select::before {\n    position: relative;\n    right: 0;\n    top: 65%;\n    color: #999;\n    margin-top: 4px;\n    border-style: solid;\n    border-width: 5px 5px 0 5px;\n    border-color: #999 transparent transparent transparent;\n    content: \"\";\n}\n\n/*.multiselect__placeholder {*/\n/*    color: #adadad;*/\n/*    display: inline-block;*/\n/*    margin-bottom: 10px;*/\n/*    padding-top: 2px;*/\n/*}*/\n\n.multiselect--active .multiselect__placeholder {\n    display: none;\n}\n\n.multiselect__content-wrapper {\n    position: absolute;\n    display: block;\n    background: #fff;\n    width: 100%;\n    max-height: 240px;\n    overflow: auto;\n    z-index: 50;\n    -webkit-overflow-scrolling: touch;\n}\n\n.multiselect__content {\n    list-style: none;\n    display: inline-block;\n    padding: 0;\n    margin: 0;\n    min-width: 100%;\n    vertical-align: top;\n}\n\n.multiselect--above .multiselect__content-wrapper {\n    bottom: 100%;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    border-bottom: none;\n    border-top: 1px solid #e8e8e8;\n}\n\n.multiselect__content::-webkit-scrollbar {\n    display: none;\n}\n\n.multiselect__element {\n    display: block;\n}\n\n.multiselect__option {\n    display: block;\n    padding: 12px;\n    min-height: 40px;\n    line-height: 16px;\n    text-decoration: none;\n    text-transform: none;\n    vertical-align: middle;\n    position: relative;\n    cursor: pointer;\n    white-space: nowrap;\n}\n\n.multiselect__option::after {\n    top: 0;\n    right: 0;\n    position: absolute;\n    line-height: 40px;\n    padding-right: 12px;\n    padding-left: 20px;\n    font-size: 13px;\n}\n\n.multiselect__option--highlight {\n    background: rgb(29 78 216 / var(--tw-bg-opacity));\n    outline: none;\n    color: white;\n}\n\n.multiselect__option--highlight::after {\n    content: attr(data-select);\n    background: rgb(29 78 216 / var(--tw-bg-opacity));\n    color: white;\n}\n\n.multiselect__option--selected {\n    background: rgb(29 78 216 / var(--tw-bg-opacity));\n    color: white;\n    font-weight: bold;\n}\n\n.multiselect__option--selected::after {\n    content: attr(data-selected);\n    color: silver;\n}\n\n.multiselect__option--selected.multiselect__option--highlight {\n    background: #ff6a6a;\n    color: #fff;\n}\n\n.multiselect__option--selected.multiselect__option--highlight::after {\n    background: #ff6a6a;\n    content: attr(data-deselect);\n    color: #fff;\n}\n\n.multiselect--disabled .multiselect__current,\n.multiselect--disabled .multiselect__select {\n    background: #ededed;\n    color: #a6a6a6;\n}\n\n.multiselect__option--disabled {\n    background: #ededed !important;\n    color: #a6a6a6 !important;\n    cursor: text;\n    pointer-events: none;\n}\n\n.multiselect__option--group {\n    background: #ededed;\n    color: #35495e;\n}\n\n.multiselect__option--group.multiselect__option--highlight {\n    background: #35495e;\n    color: #fff;\n}\n\n.multiselect__option--group.multiselect__option--highlight::after {\n    background: #35495e;\n}\n\n.multiselect__option--disabled.multiselect__option--highlight {\n    background: #dedede;\n}\n\n.multiselect__option--group-selected.multiselect__option--highlight {\n    background: #ff6a6a;\n    color: #fff;\n}\n\n.multiselect__option--group-selected.multiselect__option--highlight::after {\n    background: #ff6a6a;\n    content: attr(data-deselect);\n    color: #fff;\n}\n\n.multiselect-enter-active,\n.multiselect-leave-active {\n    transition: all 0.15s ease;\n}\n\n.multiselect-enter,\n.multiselect-leave-active {\n    opacity: 0;\n}\n\n.multiselect__strong {\n    margin-bottom: 8px;\n    line-height: 20px;\n    display: inline-block;\n    vertical-align: top;\n}\n\n*[dir=\"rtl\"] .multiselect {\n    text-align: right;\n}\n\n*[dir=\"rtl\"] .multiselect__select {\n    right: auto;\n    left: 1px;\n}\n\n*[dir=\"rtl\"] .multiselect__tags {\n    padding: 8px 8px 0 40px;\n}\n\n*[dir=\"rtl\"] .multiselect__content {\n    text-align: right;\n}\n\n*[dir=\"rtl\"] .multiselect__option::after {\n    right: auto;\n    left: 0;\n}\n\n*[dir=\"rtl\"] .multiselect__clear {\n    right: auto;\n    left: 12px;\n}\n\n*[dir=\"rtl\"] .multiselect__spinner {\n    right: auto;\n    left: 1px;\n}\n\n@keyframes spinning {\n    from {\n        transform: rotate(0);\n    }\n\n    to {\n        transform: rotate(2turn);\n    }\n}\n</style>\n"],"names":["_ssrRenderSlot","_ssrRenderStyle","_ssrInterpolate","_ssrRenderAttr"],"mappings":"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"}