{"version":3,"file":"Index-1a37b484.mjs","sources":["../../../resources/js/Pages/Public/Checkout/Index.vue"],"sourcesContent":["<script setup>\nimport Wayforpay from '@/Includes/WfpPayWidget';\nimport Loader from '@/Pages/Public/Components/Loader.vue';\nimport PersonalData from '@/Pages/Public/Checkout/PersonalData.vue';\nimport Delivery from '@/Pages/Public/Checkout/Delivery.vue';\nimport Payment from '@/Pages/Public/Checkout/Payment.vue';\nimport OrderItem from '@/Pages/Public/Checkout/OrderItem.vue';\nimport Comment from '@/Pages/Public/Checkout/Comment.vue';\nimport CheckoutTotal from '@/Pages/Public/Checkout/CheckoutTotal.vue';\nimport MasterLayout from '@/Layouts/MasterLayout.vue'\nimport Head from \"@/Pages/Public/Components/Head.vue\";\n\nimport eventTracking from \"@/Includes/eventTracking\";\nimport {ref, onMounted} from \"vue\";\nimport {useStore} from \"vuex\";\nimport {useGtm} from '@gtm-support/vue-gtm';\nimport hmacMD5 from 'crypto-js/hmac-md5';\nimport CryptoJS from 'crypto-js';\nimport {isLoading} from \"@/Pages/Public/load\";\nimport {swal} from '@/Includes/swal';\n\ndefineOptions({layout: MasterLayout})\n\nconst store = useStore();\nconst gtm = useGtm();\nconst props = defineProps([\n    'lang',\n    'eventIdInitiateCheckout',\n    'eventIdPurchase',\n    'categories',\n    'options',\n    'pages',\n    'eventIdPageView',\n]);\n\nconst state = ref({\n    order: {\n        name: null,\n        last_name: null,\n        middle_name: null,\n        email: null,\n        comment: null,\n        phone: null,\n        city: null,\n        postal_office: null,\n        payment_method: null,\n        event_id: props.eventIdPurchase\n    },\n    errors: [],\n    contentIds: [],\n    ga4ProductsArray: [],\n    isLoading: false,\n})\n\nonMounted(() => {\n    if (import.meta.env.MODE === 'production') {\n        store.state.list.forEach((item) => {\n            state.value.contentIds.push(item.id);\n            state.value.ga4ProductsArray.push({\n                item_name: item.name.ua ? item.name.ua : item.name.ru,\n                item_id: item.id,\n                price: item.discount_price ? item.discount_price : item.price,\n                quantity: item.count\n            })\n        });\n        try {\n            eventTracking(\n                'InitiateCheckout',\n                {\n                    \"value\": store.state.totalPrice,\n                    \"currency\": \"UAH\",\n                    \"num_items\": store.state.totalCount,\n                    \"content_ids\": state.value.contentIds,\n                    \"content_type\": \"product\"\n                },\n                props.eventIdInitiateCheckout\n            );\n            gtm.trackEvent({\n                event: 'start_checkout',\n                ecommerce: {\n                    items: state.value.ga4ProductsArray\n                }\n            });\n        } catch (e) {\n            console.log(e);\n        }\n    }\n    isLoading.value = false;\n})\n\nfunction wfp(order) {\n    const wayforpay = new Wayforpay();\n    const data = {\n        names: [],\n        prices: [],\n        counts: [],\n        amount: null,\n    }\n    order.items.forEach((item) => {\n        data.names.push(item.product.h1.ua ? item.product.h1.ua : item.product.h1.ru)\n        data.counts.push(item.count)\n    })\n    if (order.payment_method === 'minimum_prepayment') {\n        data.amount = order.total_price * 0.1;\n        order.items.forEach((item) => {\n            data.prices.push(item.sale_price * 0.1)\n        })\n    } else if (order.payment_method === 'full_prepayment') {\n        data.amount = order.total_price;\n        order.items.forEach((item) => {\n            data.prices.push(item.sale_price)\n        })\n    }\n\n    let params = {\n        // merchantAccount: 'test_merch_n1',\n        merchantAccount: import.meta.env.VITE_WFP_MERCHANT_LOGIN,\n        merchantDomainName: import.meta.env.VITE_DOMAIN,\n        orderReference: import.meta.env.MODE === 'production' ? order.id : 'loc' + order.id,\n        orderDate: Math.floor(new Date(order.created_at).getTime() / 1000),\n        // amount: 1,\n        amount: data.amount,\n        currency: \"UAH\",\n        productName: data.names,\n        // productPrice: [1],\n        productPrice: data.prices,\n        productCount: data.counts,\n        clientFirstName: order.client.name,\n        clientLastName: order.client.last_name,\n        clientPhone: order.client.phone,\n        language: \"UA\",\n        deliveryList: 'nova',\n        returnUrl: route('api.v1.orders.set-prepayment')\n    };\n    let string = (Object.values(\n        {\n            merchantAccount: params.merchantAccount,\n            merchantDomainName: params.merchantDomainName,\n            orderReference: params.orderReference,\n            orderDate: params.orderDate,\n            amount: params.amount,\n            currency: params.currency,\n            productName: params.productName.join(';'),\n            productCount: params.productCount.join(';'),\n            productPrice: params.productPrice.join(';'),\n        }\n    ).join(';'))\n    let signature = CryptoJS.enc.Utf8.stringify(\n        CryptoJS.enc.Utf8.parse(\n            hmacMD5(\n                string,\n                // 'flk3409refn54t54t*FNJRET'\n                import.meta.env.VITE_WFP_MERCHANT_SECRET_KEY\n            )\n        )\n    );\n    wayforpay.run({\n            merchantAccount: params.merchantAccount,\n            merchantDomainName: params.merchantDomainName,\n            authorizationType: \"SimpleSignature\",\n            merchantSignature: signature,\n            orderReference: params.orderReference,\n            orderDate: params.orderDate,\n            amount: params.amount,\n            currency: params.currency,\n            productName: params.productName,\n            productPrice: params.productPrice,\n            productCount: params.productCount,\n            clientFirstName: params.clientFirstName,\n            clientLastName: params.clientLastName,\n            clientPhone: params.clientPhone,\n            language: params.language,\n            returnUrl: params.returnUrl,\n            // deliveryList: params.deliveryList\n        },\n        function (response) {\n            // on approved\n            onSuccessPurchase(response, order);\n        },\n        function (response) {\n            // on declined\n        },\n        function (response) {\n            // on pending or in processing\n        }\n    );\n}\n\nfunction onSuccessPurchase(response, order) {\n    window.addEventListener(\"message\", function () {\n        if (event.data === 'WfpWidgetEventApproved') {\n            axios.post(route('api.v1.orders.set-prepayment', response))\n                .then(({data}) => {\n                    window.location.href = route('thanks', order.id);\n                })\n        }\n    }, false);\n\n}\n\nconst sendOrder = async () => {\n    state.value.isLoading = true;\n    state.value.errors = [];\n    await axios.post(route('api.v1.orders.create'), state.value.order)\n        .then(async ({data}) => {\n            if (import.meta.env.MODE === 'production') {\n                try {\n                    eventTracking(\n                        'Purchase',\n                        {\n                            \"value\": store.state.totalPrice,\n                            \"currency\": \"UAH\",\n                            \"content_type\": \"product\",\n                            \"num_items\": store.state.totalCount,\n                            \"content_ids\": state.value.contentIds\n                        },\n                        props.eventIdPurchase\n                    );\n\n                    gtm.trackEvent({\n                        event: 'send_order',\n                        ecommerce: {\n                            transaction_id: data.order.id,\n                            value: data.order.total_price,\n                            currency: \"UAH\",\n                            items: state.value.ga4ProductsArray\n                        }\n                    });\n                } catch (e) {\n                    console.log(e);\n                }\n\n            }\n\n            if (import.meta.env.MODE === 'production') {\n                await axios.post(route('sms.new.order'), {\n                    order_id: data.order.id,\n                    phone: data.order.client.phone,\n                })\n            }\n            if (data.order.payment_method === 'minimum_prepayment' || data.order.payment_method === 'full_prepayment') {\n                wfp(data.order);\n            } else {\n                if (typeof window !== 'undefined') {\n                    window.location.href = route('thanks', data.order.id);\n                }\n            }\n            state.value.isLoading = false;\n        })\n        .catch(({response}) => {\n            console.log(response);\n            state.value.errors = response.data;\n            state.value.isLoading = false;\n            swal({\n                icon: 'error',\n                title: 'Виникла помилка',\n                text: 'Перевірте корректніть данних',\n            })\n        });\n}\n\nfunction removeFromCart() {\n\n}\n</script>\n\n<template>\n    <Head title=\"Оформлення замовлення\"/>\n\n    <form @submit.prevent=\"sendOrder\">\n        <div class=\"grid grid-cols-1 md:grid-cols-2 relative gap-4\">\n            <div>\n                <PersonalData :order=\"state.order\" :errors=\"state.errors\"/>\n                <Delivery :order=\"state.order\"/>\n                <Payment :order=\"state.order\"/>\n                <Comment :order=\"state.order\"/>\n            </div>\n            <div class=\"\">\n                <div class=\"cart-item__right row mb-3\">\n                    <h3 class=\"text-2xl font-heading mb-[1rem]\">Замовлення</h3>\n\n                    <div class=\"grid gap-4\">\n                        <OrderItem v-for=\"item in store.state.list\"\n                                   :item=\"item\"\n                                   @removeFromCart=\"removeFromCart\"\n                        />\n                    </div>\n                    <Loader v-if=\"state.isLoading\"/>\n                    <CheckoutTotal v-if=\"!state.isLoading\"/>\n                </div>\n            </div>\n        </div>\n    </form>\n</template>\n"],"names":["__MACROS_defineComponent","MasterLayout"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBc,MAAA,cAAAA,gBAAA,EAAC,QAAQC,YAAY,CAAA;;;;;;;;;;;;;;;AAEnC,UAAM,QAAQ,SAAQ;AACtB,UAAM,MAAM,OAAM;AAWlB,UAAM,QAAQ,IAAI;AAAA,MACd,OAAO;AAAA,QACH,MAAM;AAAA,QACN,WAAW;AAAA,QACX,aAAa;AAAA,QACb,OAAO;AAAA,QACP,SAAS;AAAA,QACT,OAAO;AAAA,QACP,MAAM;AAAA,QACN,eAAe;AAAA,QACf,gBAAgB;AAAA,QAChB,UAAU,MAAM;AAAA,MACnB;AAAA,MACD,QAAQ,CAAE;AAAA,MACV,YAAY,CAAE;AAAA,MACd,kBAAkB,CAAE;AAAA,MACpB,WAAW;AAAA,IACf,CAAC;AAED,cAAU,MAAM;AAC+B;AACvC,cAAM,MAAM,KAAK,QAAQ,CAAC,SAAS;AAC/B,gBAAM,MAAM,WAAW,KAAK,KAAK,EAAE;AACnC,gBAAM,MAAM,iBAAiB,KAAK;AAAA,YAC9B,WAAW,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK,KAAK;AAAA,YACnD,SAAS,KAAK;AAAA,YACd,OAAO,KAAK,iBAAiB,KAAK,iBAAiB,KAAK;AAAA,YACxD,UAAU,KAAK;AAAA,UAC/B,CAAa;AAAA,QACb,CAAS;AACD,YAAI;AACA;AAAA,YACI;AAAA,YACA;AAAA,cACI,SAAS,MAAM,MAAM;AAAA,cACrB,YAAY;AAAA,cACZ,aAAa,MAAM,MAAM;AAAA,cACzB,eAAe,MAAM,MAAM;AAAA,cAC3B,gBAAgB;AAAA,YACnB;AAAA,YACD,MAAM;AAAA,UACtB;AACY,cAAI,WAAW;AAAA,YACX,OAAO;AAAA,YACP,WAAW;AAAA,cACP,OAAO,MAAM,MAAM;AAAA,YACtB;AAAA,UACjB,CAAa;AAAA,QACJ,SAAQ,GAAP;AACE,kBAAQ,IAAI,CAAC;AAAA,QAChB;AAAA,MACJ;AACD,gBAAU,QAAQ;AAAA,IACtB,CAAC;AA6KD,aAAS,iBAAiB;AAAA,IAE1B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}