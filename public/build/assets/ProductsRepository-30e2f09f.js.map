{"version":3,"file":"ProductsRepository-30e2f09f.js","sources":["../../../resources/js/Repositories/ProductsRepository.js"],"sourcesContent":["export default {\n    async list() {\n        try {\n            const response = await axios.get(route('api.products.list'));\n            return response.data;\n        } catch (e) {\n            throw new Error(e.response.data);\n        }\n    },\n    async fetch(params) {\n        try {\n            const response = await axios.get(route('api.products.index', params));\n            return response.data;\n        } catch (e) {\n            throw new Error(e.response.data);\n        }\n    },\n    async search(query) {\n        try {\n            const response = await axios.get(route('api.products.search', query));\n            return response.data;\n        } catch (e) {\n            throw new Error(e.response.data);\n        }\n    },\n    async create(data) {\n        try {\n            const response = await axios.post(route('api.products.create'), data);\n            return response.data;\n        } catch (e) {\n            return console.log(e);\n        }\n    },\n    async edit(id) {\n        try {\n            const response = await axios.get(route('api.products.edit', id));\n            return response.data;\n        } catch (e) {\n            throw new Error(e.response.data);\n        }\n    },\n    async destroy(id) {\n        try {\n            const response = await axios.delete(route('api.products.destroy', id))\n            return response.data;\n        } catch (e) {\n            throw new Error(e.response.data);\n        }\n    },\n    async update(item) {\n        try {\n            const response = await axios.put(route('api.products.update', item.id), item)\n            return response.data;\n        } catch (e) {\n            return console.log(e);\n        }\n    },\n    async updateSort(id, sort) {\n        try {\n            const response = await axios.post(route('api.products.sort.update', id), {sort: sort});\n            return response.data;\n        } catch (e) {\n            return console.log(e);\n        }\n    },\n    v1() {\n        return {\n            async category(params) {\n                try {\n                    const response = await axios.get(route('api.v1.products.category', params));\n                    return response.data;\n                } catch (e) {\n                    throw new Error(e.response.data);\n                }\n            }\n        }\n    }\n}\n"],"names":["ProductsRepository","params","e","query","data","id","item","sort"],"mappings":"AAAA,MAAeA,EAAA,CACX,MAAM,MAAO,CACT,GAAI,CAEA,OADiB,MAAM,MAAM,IAAI,MAAM,mBAAmB,CAAC,GAC3C,IACnB,OAAQ,EAAP,CACE,MAAM,IAAI,MAAM,EAAE,SAAS,IAAI,CAClC,CACJ,EACD,MAAM,MAAMC,EAAQ,CAChB,GAAI,CAEA,OADiB,MAAM,MAAM,IAAI,MAAM,qBAAsBA,CAAM,CAAC,GACpD,IACnB,OAAQC,EAAP,CACE,MAAM,IAAI,MAAMA,EAAE,SAAS,IAAI,CAClC,CACJ,EACD,MAAM,OAAOC,EAAO,CAChB,GAAI,CAEA,OADiB,MAAM,MAAM,IAAI,MAAM,sBAAuBA,CAAK,CAAC,GACpD,IACnB,OAAQD,EAAP,CACE,MAAM,IAAI,MAAMA,EAAE,SAAS,IAAI,CAClC,CACJ,EACD,MAAM,OAAOE,EAAM,CACf,GAAI,CAEA,OADiB,MAAM,MAAM,KAAK,MAAM,qBAAqB,EAAGA,CAAI,GACpD,IACnB,OAAQF,EAAP,CACE,OAAO,QAAQ,IAAIA,CAAC,CACvB,CACJ,EACD,MAAM,KAAKG,EAAI,CACX,GAAI,CAEA,OADiB,MAAM,MAAM,IAAI,MAAM,oBAAqBA,CAAE,CAAC,GAC/C,IACnB,OAAQH,EAAP,CACE,MAAM,IAAI,MAAMA,EAAE,SAAS,IAAI,CAClC,CACJ,EACD,MAAM,QAAQG,EAAI,CACd,GAAI,CAEA,OADiB,MAAM,MAAM,OAAO,MAAM,uBAAwBA,CAAE,CAAC,GACrD,IACnB,OAAQH,EAAP,CACE,MAAM,IAAI,MAAMA,EAAE,SAAS,IAAI,CAClC,CACJ,EACD,MAAM,OAAOI,EAAM,CACf,GAAI,CAEA,OADiB,MAAM,MAAM,IAAI,MAAM,sBAAuBA,EAAK,EAAE,EAAGA,CAAI,GAC5D,IACnB,OAAQJ,EAAP,CACE,OAAO,QAAQ,IAAIA,CAAC,CACvB,CACJ,EACD,MAAM,WAAWG,EAAIE,EAAM,CACvB,GAAI,CAEA,OADiB,MAAM,MAAM,KAAK,MAAM,2BAA4BF,CAAE,EAAG,CAAC,KAAME,CAAI,CAAC,GACrE,IACnB,OAAQL,EAAP,CACE,OAAO,QAAQ,IAAIA,CAAC,CACvB,CACJ,EACD,IAAK,CACD,MAAO,CACH,MAAM,SAASD,EAAQ,CACnB,GAAI,CAEA,OADiB,MAAM,MAAM,IAAI,MAAM,2BAA4BA,CAAM,CAAC,GAC1D,IACnB,OAAQC,EAAP,CACE,MAAM,IAAI,MAAMA,EAAE,SAAS,IAAI,CAClC,CACJ,CACJ,CACJ,CACL"}