{"version":3,"file":"Index-85232d83.js","sources":["../../../resources/js/Pages/Admin/Statistics/CostProfitCategories/Index.vue"],"sourcesContent":["<script setup>\nimport StatisticLayout from '@/Pages/Admin/Statistics/StatisticLayout.vue'\nimport CostCategoryForm from '@/Pages/Admin/Statistics/CostProfitCategories/Form.vue';\nimport Modal from '@/Components/Modal/Modal.vue';\n\nimport Button from 'primevue/button';\nimport DataTable from 'primevue/datatable';\nimport Column from 'primevue/column';\n\nimport {reactive, onMounted, inject, ref, computed} from \"vue\";\nimport {useI18n} from \"vue-i18n\";\nimport {toast} from 'vue3-toastify';\nimport isDark from '@/Includes/isDark.js';\n\nimport {useConfirm} from \"@/Components/ConfirmationModal/useConfirm\";\n\nconst {t} = useI18n();\nconst can = inject('$can');\n\nconst item = ({\n    title: null,\n    slug: null,\n    type: null,\n})\n\nconst state = reactive({\n    categories: [],\n    isLoading: true,\n    isActiveModal: false,\n    modalAction: '',\n    item: {},\n    currentPage: 1,\n\n});\n\nconst lazyParams = ref({\n    date: null,\n    page: 0,\n    first: 0,\n    rows: 15,\n    sortField: null,\n    sortOrder: null,\n});\n\nconst params = computed(() => {\n    let sort = {};\n\n    if (lazyParams.value.sortField) {\n        sort.sort = lazyParams.value.sortField;\n\n        if (lazyParams.value.sortOrder === 1) {\n            sort.param = 'asc';\n        } else if (lazyParams.value.sortOrder === -1) {\n            sort.param = 'desc';\n        }\n    }\n\n    return {\n        perPage: lazyParams.value.rows || 15,\n        sort: sort.sort && sort.param ? sort.sort : null,\n        param: sort.sort && sort.param ? sort.param : null,\n        page: (lazyParams.value.page || 0) + 1,\n    };\n});\n\nonMounted(async () => await fetch());\n\nconst fetch = async () => {\n    state.isLoading = true;\n    await axios.get(route('api.statistics.costs.categories.index', params.value))\n        .then(({data}) => state.categories = data.result)\n        .catch((response) => console.error(response))\n    state.isLoading = false;\n\n}\n\nfunction onDestroy(id) {\n    if (can('show-bookkeeping-costs')) {\n        useConfirm({\n            message: t('swal.confirm_destroy'),\n            header: t('swal.confirm_action'),\n            icon: 'pi pi-exclamation-triangle',\n            accept: async () => {\n                try {\n                    const {data} = await axios.delete(route('api.statistics.costs.categories.destroy', id));\n                    if (data.success) {\n                        await fetch();\n                        toast.success(t(`swal.destroyed`), {\n                            autoClose: 3000,\n                            theme: isDark ? 'dark' : 'light'\n                        });\n                    }\n                } catch (error) {\n                    console.error(error);\n                    toast.error(t('swal.error'), {\n                        autoClose: 3000,\n                        theme: isDark ? 'dark' : 'light'\n                    });\n                }\n            }\n        });\n    }\n}\n\nfunction modalFunction() {\n    state.isActiveModal = !state.isActiveModal;\n}\n\nfunction onEdit(id, i) {\n    axios.get(route('api.statistics.costs.categories.edit', id))\n        .then(({data}) => {\n            state.item = data.result;\n            state.modalAction = 'edit';\n            state.item.index = i;\n            modalFunction();\n            state.isLoading = false;\n        })\n        .catch((response) => console.log(response))\n}\n\nfunction onUpdate() {\n    if (state.item.type !== null && typeof state.item.type === 'object') {\n        state.item.type = state.item.type.code;\n    }\n    axios.put(route('api.statistics.costs.categories.update', state.item.id), state.item)\n        .then(() => {\n            modalFunction();\n            fetch();\n            toast.success(t(`swal.updated`), {\n                autoClose: 3000,\n                theme: isDark ? 'dark' : 'light'\n            });\n        })\n        .catch((response) => {\n            console.log(response);\n            toast.error(t('swal.error'), {\n                autoClose: 3000,\n                theme: isDark ? 'dark' : 'light'\n            });\n        })\n}\n\nfunction onCreate() {\n    if (state.item.type !== null && typeof state.item.type === 'object') {\n        state.item.type = state.item.type.code;\n    }\n    axios.post(route('api.statistics.costs.categories.create'), state.item)\n        .then(() => {\n            modalFunction();\n            state.item = JSON.parse(JSON.stringify(item));\n            fetch();\n            toast.success(t(`swal.created`), {\n                autoClose: 3000,\n                theme: isDark ? 'dark' : 'light'\n            });\n        })\n        .catch((response) => {\n            console.log(response);\n            toast.error(t('swal.error'), {\n                autoClose: 3000,\n                theme: isDark ? 'dark' : 'light'\n            });\n        })\n}\n\nfunction submitForm() {\n    if (state.modalAction === 'edit') {\n        onUpdate();\n    } else if (state.modalAction === 'create') {\n        onCreate();\n    }\n}\n\nfunction create() {\n    state.item = JSON.parse(JSON.stringify(item));\n    state.modalAction = 'create';\n    modalFunction();\n}\n\n\nconst onPage = async (e) => {\n    lazyParams.value = e;\n    await fetch();\n}\n\nconst onSort = async (e) => {\n    lazyParams.value = e;\n    await fetch();\n}\n\nconst onRowSelect = (event) => {\n    state.isLoading = true;\n    onEdit(event.data.id);\n};\n</script>\n\n<template>\n    <StatisticLayout title=\"Категорії витрат\">\n        <template #header>\n            Категорії витрат та прибутків\n        </template>\n\n        <div v-if=\"can('show-bookkeeping-costs')\" class=\"grid grid-cols-1 gap-4\">\n            <div>\n                <Button type=\"btn\" @click=\"create\">\n                    Додати\n                </Button>\n            </div>\n\n            <DataTable\n                selectionMode=\"single\"\n                @rowSelect=\"onRowSelect\"\n                ref=\"dt\"\n                dataKey=\"date\"\n                :loading=\"state.isLoading\"\n                :value=\"state.categories.data\"\n                class=\"p-datatable cost-and-profit-categories-table\"\n                lazy\n                paginator\n                :rows=\"state.categories.per_page\"\n                :totalRecords=\"state.categories.total\"\n                @page=\"onPage($event)\"\n                @sort=\"onSort($event)\"\n                :rowsPerPageOptions=\"[15, 50, 100, 500]\"\n                paginatorTemplate=\"FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink RowsPerPageDropdown CurrentPageReport\"\n                currentPageReportTemplate=\"Показано з {first} по {last} із {totalRecords} записів\"\n            >\n                <Column sortable field=\"title\" header=\"Назва\">\n                    <template #body=\"{data}\">\n                        <div class=\"text-center\">\n                            {{ data.title }}\n                        </div>\n                    </template>\n                </Column>\n\n                <Column sortable field=\"type\" header=\"Тип\">\n                    <template #body=\"{data}\">\n                        <div class=\"text-center\">\n                            {{ data.type ? 'Прибуток' : 'Витрата' }}\n                        </div>\n                    </template>\n                </Column>\n\n\n                <Column sortable field=\"slug\" header=\"Slug\">\n                    <template #body=\"{data}\">\n                        <div class=\"text-center\">\n                            {{ data.slug }}\n                        </div>\n                    </template>\n                </Column>\n\n                <Column field=\"actions\" header=\"\">\n                    <template #body=\"{data}\">\n                        <Button text\n                                rounded\n                                icon=\"pi pi-trash\"\n                                type=\"button\"\n                                @click=\"onDestroy(data.id)\"\n                        />\n                    </template>\n                </Column>\n\n            </DataTable>\n        </div>\n    </StatisticLayout>\n\n    <Modal :show=\"state.isActiveModal\" @close=\"modalFunction\">\n        <template #body>\n            <CostCategoryForm :item=\"state.item\"/>\n        </template>\n        <template #footer>\n            <Button label=\"Скасувати\" icon=\"pi pi-times\" @click=\"modalFunction\" text/>\n            <Button label=\"Зберегти\" icon=\"pi pi-check\" @click=\"submitForm\" autofocus/>\n        </template>\n    </Modal>\n</template>\n\n<style>\n.cost-and-profit-categories-table.p-datatable .p-column-header-content {\n    justify-content: center;\n}\n</style>\n"],"names":["t","useI18n","can","inject","item","state","reactive","lazyParams","ref","params","computed","sort","onMounted","fetch","data","response","onDestroy","id","useConfirm","toast","isDark","error","modalFunction","onEdit","i","onUpdate","onCreate","submitForm","create","onPage","e","onSort","onRowSelect","event"],"mappings":"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"}