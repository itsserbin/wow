const s={async list(){try{return(await axios.get(route("api.products.list"))).data}catch(e){throw new Error(e.response.data)}},async fetch(e){try{return(await axios.get(route("api.products.index",e))).data}catch(t){throw new Error(t.response.data)}},async search(e){try{return(await axios.get(route("api.products.search",e))).data}catch(t){throw new Error(t.response.data)}},async create(e){try{return(await axios.post(route("api.products.create"),e)).data}catch(t){return console.log(t)}},async edit(e){try{return(await axios.get(route("api.products.edit",e))).data}catch(t){throw new Error(t.response.data)}},async destroy(e){try{return(await axios.delete(route("api.products.destroy",e))).data}catch(t){throw new Error(t.response.data)}},async update(e){try{return(await axios.put(route("api.products.update",e.id),e)).data}catch(t){return console.log(t)}},async updateSort(e,t){try{return(await axios.post(route("api.products.sort.update",e),{sort:t})).data}catch(r){return console.log(r)}},v1(){return{async category(e){try{return(await axios.get(route("api.v1.products.category",e))).data}catch(t){throw new Error(t.response.data)}}}}};export{s as P};
