{"version":3,"file":"ImagesSlider-6b6131ed.js","sources":["../../../node_modules/swiper/modules/zoom/zoom.js","../../../node_modules/swiper/modules/thumbs/thumbs.js","../../../node_modules/swiper/modules/free-mode/free-mode.js","../../../resources/js/Pages/Public/Product/ImagesSlider.vue"],"sourcesContent":["import { getWindow } from 'ssr-window';\nimport $ from '../../shared/dom.js';\nimport { getTranslate } from '../../shared/utils.js';\nexport default function Zoom({\n  swiper,\n  extendParams,\n  on,\n  emit\n}) {\n  const window = getWindow();\n  extendParams({\n    zoom: {\n      enabled: false,\n      maxRatio: 3,\n      minRatio: 1,\n      toggle: true,\n      containerClass: 'swiper-zoom-container',\n      zoomedSlideClass: 'swiper-slide-zoomed'\n    }\n  });\n  swiper.zoom = {\n    enabled: false\n  };\n  let currentScale = 1;\n  let isScaling = false;\n  let gesturesEnabled;\n  let fakeGestureTouched;\n  let fakeGestureMoved;\n  const gesture = {\n    $slideEl: undefined,\n    slideWidth: undefined,\n    slideHeight: undefined,\n    $imageEl: undefined,\n    $imageWrapEl: undefined,\n    maxRatio: 3\n  };\n  const image = {\n    isTouched: undefined,\n    isMoved: undefined,\n    currentX: undefined,\n    currentY: undefined,\n    minX: undefined,\n    minY: undefined,\n    maxX: undefined,\n    maxY: undefined,\n    width: undefined,\n    height: undefined,\n    startX: undefined,\n    startY: undefined,\n    touchesStart: {},\n    touchesCurrent: {}\n  };\n  const velocity = {\n    x: undefined,\n    y: undefined,\n    prevPositionX: undefined,\n    prevPositionY: undefined,\n    prevTime: undefined\n  };\n  let scale = 1;\n  Object.defineProperty(swiper.zoom, 'scale', {\n    get() {\n      return scale;\n    },\n\n    set(value) {\n      if (scale !== value) {\n        const imageEl = gesture.$imageEl ? gesture.$imageEl[0] : undefined;\n        const slideEl = gesture.$slideEl ? gesture.$slideEl[0] : undefined;\n        emit('zoomChange', value, imageEl, slideEl);\n      }\n\n      scale = value;\n    }\n\n  });\n\n  function getDistanceBetweenTouches(e) {\n    if (e.targetTouches.length < 2) return 1;\n    const x1 = e.targetTouches[0].pageX;\n    const y1 = e.targetTouches[0].pageY;\n    const x2 = e.targetTouches[1].pageX;\n    const y2 = e.targetTouches[1].pageY;\n    const distance = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n    return distance;\n  } // Events\n\n\n  function onGestureStart(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    fakeGestureTouched = false;\n    fakeGestureMoved = false;\n\n    if (!support.gestures) {\n      if (e.type !== 'touchstart' || e.type === 'touchstart' && e.targetTouches.length < 2) {\n        return;\n      }\n\n      fakeGestureTouched = true;\n      gesture.scaleStart = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$slideEl || !gesture.$slideEl.length) {\n      gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      if (gesture.$slideEl.length === 0) gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n      gesture.maxRatio = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n      if (gesture.$imageWrapEl.length === 0) {\n        gesture.$imageEl = undefined;\n        return;\n      }\n    }\n\n    if (gesture.$imageEl) {\n      gesture.$imageEl.transition(0);\n    }\n\n    isScaling = true;\n  }\n\n  function onGestureChange(e) {\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n\n    if (!support.gestures) {\n      if (e.type !== 'touchmove' || e.type === 'touchmove' && e.targetTouches.length < 2) {\n        return;\n      }\n\n      fakeGestureMoved = true;\n      gesture.scaleMove = getDistanceBetweenTouches(e);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) {\n      if (e.type === 'gesturechange') onGestureStart(e);\n      return;\n    }\n\n    if (support.gestures) {\n      zoom.scale = e.scale * currentScale;\n    } else {\n      zoom.scale = gesture.scaleMove / gesture.scaleStart * currentScale;\n    }\n\n    if (zoom.scale > gesture.maxRatio) {\n      zoom.scale = gesture.maxRatio - 1 + (zoom.scale - gesture.maxRatio + 1) ** 0.5;\n    }\n\n    if (zoom.scale < params.minRatio) {\n      zoom.scale = params.minRatio + 1 - (params.minRatio - zoom.scale + 1) ** 0.5;\n    }\n\n    gesture.$imageEl.transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n\n  function onGestureEnd(e) {\n    const device = swiper.device;\n    const support = swiper.support;\n    const params = swiper.params.zoom;\n    const zoom = swiper.zoom;\n\n    if (!support.gestures) {\n      if (!fakeGestureTouched || !fakeGestureMoved) {\n        return;\n      }\n\n      if (e.type !== 'touchend' || e.type === 'touchend' && e.changedTouches.length < 2 && !device.android) {\n        return;\n      }\n\n      fakeGestureTouched = false;\n      fakeGestureMoved = false;\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    zoom.scale = Math.max(Math.min(zoom.scale, gesture.maxRatio), params.minRatio);\n    gesture.$imageEl.transition(swiper.params.speed).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n    currentScale = zoom.scale;\n    isScaling = false;\n    if (zoom.scale === 1) gesture.$slideEl = undefined;\n  }\n\n  function onTouchStart(e) {\n    const device = swiper.device;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    if (image.isTouched) return;\n    if (device.android && e.cancelable) e.preventDefault();\n    image.isTouched = true;\n    image.touchesStart.x = e.type === 'touchstart' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesStart.y = e.type === 'touchstart' ? e.targetTouches[0].pageY : e.pageY;\n  }\n\n  function onTouchMove(e) {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n    swiper.allowClick = false;\n    if (!image.isTouched || !gesture.$slideEl) return;\n\n    if (!image.isMoved) {\n      image.width = gesture.$imageEl[0].offsetWidth;\n      image.height = gesture.$imageEl[0].offsetHeight;\n      image.startX = getTranslate(gesture.$imageWrapEl[0], 'x') || 0;\n      image.startY = getTranslate(gesture.$imageWrapEl[0], 'y') || 0;\n      gesture.slideWidth = gesture.$slideEl[0].offsetWidth;\n      gesture.slideHeight = gesture.$slideEl[0].offsetHeight;\n      gesture.$imageWrapEl.transition(0);\n    } // Define if we need image drag\n\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    if (scaledWidth < gesture.slideWidth && scaledHeight < gesture.slideHeight) return;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.touchesCurrent.x = e.type === 'touchmove' ? e.targetTouches[0].pageX : e.pageX;\n    image.touchesCurrent.y = e.type === 'touchmove' ? e.targetTouches[0].pageY : e.pageY;\n\n    if (!image.isMoved && !isScaling) {\n      if (swiper.isHorizontal() && (Math.floor(image.minX) === Math.floor(image.startX) && image.touchesCurrent.x < image.touchesStart.x || Math.floor(image.maxX) === Math.floor(image.startX) && image.touchesCurrent.x > image.touchesStart.x)) {\n        image.isTouched = false;\n        return;\n      }\n\n      if (!swiper.isHorizontal() && (Math.floor(image.minY) === Math.floor(image.startY) && image.touchesCurrent.y < image.touchesStart.y || Math.floor(image.maxY) === Math.floor(image.startY) && image.touchesCurrent.y > image.touchesStart.y)) {\n        image.isTouched = false;\n        return;\n      }\n    }\n\n    if (e.cancelable) {\n      e.preventDefault();\n    }\n\n    e.stopPropagation();\n    image.isMoved = true;\n    image.currentX = image.touchesCurrent.x - image.touchesStart.x + image.startX;\n    image.currentY = image.touchesCurrent.y - image.touchesStart.y + image.startY;\n\n    if (image.currentX < image.minX) {\n      image.currentX = image.minX + 1 - (image.minX - image.currentX + 1) ** 0.8;\n    }\n\n    if (image.currentX > image.maxX) {\n      image.currentX = image.maxX - 1 + (image.currentX - image.maxX + 1) ** 0.8;\n    }\n\n    if (image.currentY < image.minY) {\n      image.currentY = image.minY + 1 - (image.minY - image.currentY + 1) ** 0.8;\n    }\n\n    if (image.currentY > image.maxY) {\n      image.currentY = image.maxY - 1 + (image.currentY - image.maxY + 1) ** 0.8;\n    } // Velocity\n\n\n    if (!velocity.prevPositionX) velocity.prevPositionX = image.touchesCurrent.x;\n    if (!velocity.prevPositionY) velocity.prevPositionY = image.touchesCurrent.y;\n    if (!velocity.prevTime) velocity.prevTime = Date.now();\n    velocity.x = (image.touchesCurrent.x - velocity.prevPositionX) / (Date.now() - velocity.prevTime) / 2;\n    velocity.y = (image.touchesCurrent.y - velocity.prevPositionY) / (Date.now() - velocity.prevTime) / 2;\n    if (Math.abs(image.touchesCurrent.x - velocity.prevPositionX) < 2) velocity.x = 0;\n    if (Math.abs(image.touchesCurrent.y - velocity.prevPositionY) < 2) velocity.y = 0;\n    velocity.prevPositionX = image.touchesCurrent.x;\n    velocity.prevPositionY = image.touchesCurrent.y;\n    velocity.prevTime = Date.now();\n    gesture.$imageWrapEl.transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n\n  function onTouchEnd() {\n    const zoom = swiper.zoom;\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0) return;\n\n    if (!image.isTouched || !image.isMoved) {\n      image.isTouched = false;\n      image.isMoved = false;\n      return;\n    }\n\n    image.isTouched = false;\n    image.isMoved = false;\n    let momentumDurationX = 300;\n    let momentumDurationY = 300;\n    const momentumDistanceX = velocity.x * momentumDurationX;\n    const newPositionX = image.currentX + momentumDistanceX;\n    const momentumDistanceY = velocity.y * momentumDurationY;\n    const newPositionY = image.currentY + momentumDistanceY; // Fix duration\n\n    if (velocity.x !== 0) momentumDurationX = Math.abs((newPositionX - image.currentX) / velocity.x);\n    if (velocity.y !== 0) momentumDurationY = Math.abs((newPositionY - image.currentY) / velocity.y);\n    const momentumDuration = Math.max(momentumDurationX, momentumDurationY);\n    image.currentX = newPositionX;\n    image.currentY = newPositionY; // Define if we need image drag\n\n    const scaledWidth = image.width * zoom.scale;\n    const scaledHeight = image.height * zoom.scale;\n    image.minX = Math.min(gesture.slideWidth / 2 - scaledWidth / 2, 0);\n    image.maxX = -image.minX;\n    image.minY = Math.min(gesture.slideHeight / 2 - scaledHeight / 2, 0);\n    image.maxY = -image.minY;\n    image.currentX = Math.max(Math.min(image.currentX, image.maxX), image.minX);\n    image.currentY = Math.max(Math.min(image.currentY, image.maxY), image.minY);\n    gesture.$imageWrapEl.transition(momentumDuration).transform(`translate3d(${image.currentX}px, ${image.currentY}px,0)`);\n  }\n\n  function onTransitionEnd() {\n    const zoom = swiper.zoom;\n\n    if (gesture.$slideEl && swiper.previousIndex !== swiper.activeIndex) {\n      if (gesture.$imageEl) {\n        gesture.$imageEl.transform('translate3d(0,0,0) scale(1)');\n      }\n\n      if (gesture.$imageWrapEl) {\n        gesture.$imageWrapEl.transform('translate3d(0,0,0)');\n      }\n\n      zoom.scale = 1;\n      currentScale = 1;\n      gesture.$slideEl = undefined;\n      gesture.$imageEl = undefined;\n      gesture.$imageWrapEl = undefined;\n    }\n  }\n\n  function zoomIn(e) {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (e && e.target) {\n        gesture.$slideEl = $(e.target).closest(`.${swiper.params.slideClass}`);\n      }\n\n      if (!gesture.$slideEl) {\n        if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n          gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n        } else {\n          gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n        }\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = 'hidden';\n      swiper.wrapperEl.style.touchAction = 'none';\n    }\n\n    gesture.$slideEl.addClass(`${params.zoomedSlideClass}`);\n    let touchX;\n    let touchY;\n    let offsetX;\n    let offsetY;\n    let diffX;\n    let diffY;\n    let translateX;\n    let translateY;\n    let imageWidth;\n    let imageHeight;\n    let scaledWidth;\n    let scaledHeight;\n    let translateMinX;\n    let translateMinY;\n    let translateMaxX;\n    let translateMaxY;\n    let slideWidth;\n    let slideHeight;\n\n    if (typeof image.touchesStart.x === 'undefined' && e) {\n      touchX = e.type === 'touchend' ? e.changedTouches[0].pageX : e.pageX;\n      touchY = e.type === 'touchend' ? e.changedTouches[0].pageY : e.pageY;\n    } else {\n      touchX = image.touchesStart.x;\n      touchY = image.touchesStart.y;\n    }\n\n    zoom.scale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n    currentScale = gesture.$imageWrapEl.attr('data-swiper-zoom') || params.maxRatio;\n\n    if (e) {\n      slideWidth = gesture.$slideEl[0].offsetWidth;\n      slideHeight = gesture.$slideEl[0].offsetHeight;\n      offsetX = gesture.$slideEl.offset().left + window.scrollX;\n      offsetY = gesture.$slideEl.offset().top + window.scrollY;\n      diffX = offsetX + slideWidth / 2 - touchX;\n      diffY = offsetY + slideHeight / 2 - touchY;\n      imageWidth = gesture.$imageEl[0].offsetWidth;\n      imageHeight = gesture.$imageEl[0].offsetHeight;\n      scaledWidth = imageWidth * zoom.scale;\n      scaledHeight = imageHeight * zoom.scale;\n      translateMinX = Math.min(slideWidth / 2 - scaledWidth / 2, 0);\n      translateMinY = Math.min(slideHeight / 2 - scaledHeight / 2, 0);\n      translateMaxX = -translateMinX;\n      translateMaxY = -translateMinY;\n      translateX = diffX * zoom.scale;\n      translateY = diffY * zoom.scale;\n\n      if (translateX < translateMinX) {\n        translateX = translateMinX;\n      }\n\n      if (translateX > translateMaxX) {\n        translateX = translateMaxX;\n      }\n\n      if (translateY < translateMinY) {\n        translateY = translateMinY;\n      }\n\n      if (translateY > translateMaxY) {\n        translateY = translateMaxY;\n      }\n    } else {\n      translateX = 0;\n      translateY = 0;\n    }\n\n    gesture.$imageWrapEl.transition(300).transform(`translate3d(${translateX}px, ${translateY}px,0)`);\n    gesture.$imageEl.transition(300).transform(`translate3d(0,0,0) scale(${zoom.scale})`);\n  }\n\n  function zoomOut() {\n    const zoom = swiper.zoom;\n    const params = swiper.params.zoom;\n\n    if (!gesture.$slideEl) {\n      if (swiper.params.virtual && swiper.params.virtual.enabled && swiper.virtual) {\n        gesture.$slideEl = swiper.$wrapperEl.children(`.${swiper.params.slideActiveClass}`);\n      } else {\n        gesture.$slideEl = swiper.slides.eq(swiper.activeIndex);\n      }\n\n      gesture.$imageEl = gesture.$slideEl.find(`.${params.containerClass}`).eq(0).find('picture, img, svg, canvas, .swiper-zoom-target').eq(0);\n      gesture.$imageWrapEl = gesture.$imageEl.parent(`.${params.containerClass}`);\n    }\n\n    if (!gesture.$imageEl || gesture.$imageEl.length === 0 || !gesture.$imageWrapEl || gesture.$imageWrapEl.length === 0) return;\n\n    if (swiper.params.cssMode) {\n      swiper.wrapperEl.style.overflow = '';\n      swiper.wrapperEl.style.touchAction = '';\n    }\n\n    zoom.scale = 1;\n    currentScale = 1;\n    gesture.$imageWrapEl.transition(300).transform('translate3d(0,0,0)');\n    gesture.$imageEl.transition(300).transform('translate3d(0,0,0) scale(1)');\n    gesture.$slideEl.removeClass(`${params.zoomedSlideClass}`);\n    gesture.$slideEl = undefined;\n  } // Toggle Zoom\n\n\n  function zoomToggle(e) {\n    const zoom = swiper.zoom;\n\n    if (zoom.scale && zoom.scale !== 1) {\n      // Zoom Out\n      zoomOut();\n    } else {\n      // Zoom In\n      zoomIn(e);\n    }\n  }\n\n  function getListeners() {\n    const support = swiper.support;\n    const passiveListener = swiper.touchEvents.start === 'touchstart' && support.passiveListener && swiper.params.passiveListeners ? {\n      passive: true,\n      capture: false\n    } : false;\n    const activeListenerWithCapture = support.passiveListener ? {\n      passive: false,\n      capture: true\n    } : true;\n    return {\n      passiveListener,\n      activeListenerWithCapture\n    };\n  }\n\n  function getSlideSelector() {\n    return `.${swiper.params.slideClass}`;\n  }\n\n  function toggleGestures(method) {\n    const {\n      passiveListener\n    } = getListeners();\n    const slideSelector = getSlideSelector();\n    swiper.$wrapperEl[method]('gesturestart', slideSelector, onGestureStart, passiveListener);\n    swiper.$wrapperEl[method]('gesturechange', slideSelector, onGestureChange, passiveListener);\n    swiper.$wrapperEl[method]('gestureend', slideSelector, onGestureEnd, passiveListener);\n  }\n\n  function enableGestures() {\n    if (gesturesEnabled) return;\n    gesturesEnabled = true;\n    toggleGestures('on');\n  }\n\n  function disableGestures() {\n    if (!gesturesEnabled) return;\n    gesturesEnabled = false;\n    toggleGestures('off');\n  } // Attach/Detach Events\n\n\n  function enable() {\n    const zoom = swiper.zoom;\n    if (zoom.enabled) return;\n    zoom.enabled = true;\n    const support = swiper.support;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n    const slideSelector = getSlideSelector(); // Scale image\n\n    if (support.gestures) {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.on(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl.on(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.on(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.on(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n      }\n    } // Move image\n\n\n    swiper.$wrapperEl.on(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n  }\n\n  function disable() {\n    const zoom = swiper.zoom;\n    if (!zoom.enabled) return;\n    const support = swiper.support;\n    zoom.enabled = false;\n    const {\n      passiveListener,\n      activeListenerWithCapture\n    } = getListeners();\n    const slideSelector = getSlideSelector(); // Scale image\n\n    if (support.gestures) {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, enableGestures, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, disableGestures, passiveListener);\n    } else if (swiper.touchEvents.start === 'touchstart') {\n      swiper.$wrapperEl.off(swiper.touchEvents.start, slideSelector, onGestureStart, passiveListener);\n      swiper.$wrapperEl.off(swiper.touchEvents.move, slideSelector, onGestureChange, activeListenerWithCapture);\n      swiper.$wrapperEl.off(swiper.touchEvents.end, slideSelector, onGestureEnd, passiveListener);\n\n      if (swiper.touchEvents.cancel) {\n        swiper.$wrapperEl.off(swiper.touchEvents.cancel, slideSelector, onGestureEnd, passiveListener);\n      }\n    } // Move image\n\n\n    swiper.$wrapperEl.off(swiper.touchEvents.move, `.${swiper.params.zoom.containerClass}`, onTouchMove, activeListenerWithCapture);\n  }\n\n  on('init', () => {\n    if (swiper.params.zoom.enabled) {\n      enable();\n    }\n  });\n  on('destroy', () => {\n    disable();\n  });\n  on('touchStart', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchStart(e);\n  });\n  on('touchEnd', (_s, e) => {\n    if (!swiper.zoom.enabled) return;\n    onTouchEnd(e);\n  });\n  on('doubleTap', (_s, e) => {\n    if (!swiper.animating && swiper.params.zoom.enabled && swiper.zoom.enabled && swiper.params.zoom.toggle) {\n      zoomToggle(e);\n    }\n  });\n  on('transitionEnd', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled) {\n      onTransitionEnd();\n    }\n  });\n  on('slideChange', () => {\n    if (swiper.zoom.enabled && swiper.params.zoom.enabled && swiper.params.cssMode) {\n      onTransitionEnd();\n    }\n  });\n  Object.assign(swiper.zoom, {\n    enable,\n    disable,\n    in: zoomIn,\n    out: zoomOut,\n    toggle: zoomToggle\n  });\n}","import { isObject } from '../../shared/utils.js';\nimport $ from '../../shared/dom.js';\nexport default function Thumb({\n  swiper,\n  extendParams,\n  on\n}) {\n  extendParams({\n    thumbs: {\n      swiper: null,\n      multipleActiveThumbs: true,\n      autoScrollOffset: 0,\n      slideThumbActiveClass: 'swiper-slide-thumb-active',\n      thumbsContainerClass: 'swiper-thumbs'\n    }\n  });\n  let initialized = false;\n  let swiperCreated = false;\n  swiper.thumbs = {\n    swiper: null\n  };\n\n  function onThumbClick() {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const clickedIndex = thumbsSwiper.clickedIndex;\n    const clickedSlide = thumbsSwiper.clickedSlide;\n    if (clickedSlide && $(clickedSlide).hasClass(swiper.params.thumbs.slideThumbActiveClass)) return;\n    if (typeof clickedIndex === 'undefined' || clickedIndex === null) return;\n    let slideToIndex;\n\n    if (thumbsSwiper.params.loop) {\n      slideToIndex = parseInt($(thumbsSwiper.clickedSlide).attr('data-swiper-slide-index'), 10);\n    } else {\n      slideToIndex = clickedIndex;\n    }\n\n    if (swiper.params.loop) {\n      let currentIndex = swiper.activeIndex;\n\n      if (swiper.slides.eq(currentIndex).hasClass(swiper.params.slideDuplicateClass)) {\n        swiper.loopFix(); // eslint-disable-next-line\n\n        swiper._clientLeft = swiper.$wrapperEl[0].clientLeft;\n        currentIndex = swiper.activeIndex;\n      }\n\n      const prevIndex = swiper.slides.eq(currentIndex).prevAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      const nextIndex = swiper.slides.eq(currentIndex).nextAll(`[data-swiper-slide-index=\"${slideToIndex}\"]`).eq(0).index();\n      if (typeof prevIndex === 'undefined') slideToIndex = nextIndex;else if (typeof nextIndex === 'undefined') slideToIndex = prevIndex;else if (nextIndex - currentIndex < currentIndex - prevIndex) slideToIndex = nextIndex;else slideToIndex = prevIndex;\n    }\n\n    swiper.slideTo(slideToIndex);\n  }\n\n  function init() {\n    const {\n      thumbs: thumbsParams\n    } = swiper.params;\n    if (initialized) return false;\n    initialized = true;\n    const SwiperClass = swiper.constructor;\n\n    if (thumbsParams.swiper instanceof SwiperClass) {\n      swiper.thumbs.swiper = thumbsParams.swiper;\n      Object.assign(swiper.thumbs.swiper.originalParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      Object.assign(swiper.thumbs.swiper.params, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n    } else if (isObject(thumbsParams.swiper)) {\n      const thumbsSwiperParams = Object.assign({}, thumbsParams.swiper);\n      Object.assign(thumbsSwiperParams, {\n        watchSlidesProgress: true,\n        slideToClickedSlide: false\n      });\n      swiper.thumbs.swiper = new SwiperClass(thumbsSwiperParams);\n      swiperCreated = true;\n    }\n\n    swiper.thumbs.swiper.$el.addClass(swiper.params.thumbs.thumbsContainerClass);\n    swiper.thumbs.swiper.on('tap', onThumbClick);\n    return true;\n  }\n\n  function update(initial) {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    const slidesPerView = thumbsSwiper.params.slidesPerView === 'auto' ? thumbsSwiper.slidesPerViewDynamic() : thumbsSwiper.params.slidesPerView; // Activate thumbs\n\n    let thumbsToActivate = 1;\n    const thumbActiveClass = swiper.params.thumbs.slideThumbActiveClass;\n\n    if (swiper.params.slidesPerView > 1 && !swiper.params.centeredSlides) {\n      thumbsToActivate = swiper.params.slidesPerView;\n    }\n\n    if (!swiper.params.thumbs.multipleActiveThumbs) {\n      thumbsToActivate = 1;\n    }\n\n    thumbsToActivate = Math.floor(thumbsToActivate);\n    thumbsSwiper.slides.removeClass(thumbActiveClass);\n\n    if (thumbsSwiper.params.loop || thumbsSwiper.params.virtual && thumbsSwiper.params.virtual.enabled) {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.$wrapperEl.children(`[data-swiper-slide-index=\"${swiper.realIndex + i}\"]`).addClass(thumbActiveClass);\n      }\n    } else {\n      for (let i = 0; i < thumbsToActivate; i += 1) {\n        thumbsSwiper.slides.eq(swiper.realIndex + i).addClass(thumbActiveClass);\n      }\n    }\n\n    const autoScrollOffset = swiper.params.thumbs.autoScrollOffset;\n    const useOffset = autoScrollOffset && !thumbsSwiper.params.loop;\n\n    if (swiper.realIndex !== thumbsSwiper.realIndex || useOffset) {\n      let currentThumbsIndex = thumbsSwiper.activeIndex;\n      let newThumbsIndex;\n      let direction;\n\n      if (thumbsSwiper.params.loop) {\n        if (thumbsSwiper.slides.eq(currentThumbsIndex).hasClass(thumbsSwiper.params.slideDuplicateClass)) {\n          thumbsSwiper.loopFix(); // eslint-disable-next-line\n\n          thumbsSwiper._clientLeft = thumbsSwiper.$wrapperEl[0].clientLeft;\n          currentThumbsIndex = thumbsSwiper.activeIndex;\n        } // Find actual thumbs index to slide to\n\n\n        const prevThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).prevAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n        const nextThumbsIndex = thumbsSwiper.slides.eq(currentThumbsIndex).nextAll(`[data-swiper-slide-index=\"${swiper.realIndex}\"]`).eq(0).index();\n\n        if (typeof prevThumbsIndex === 'undefined') {\n          newThumbsIndex = nextThumbsIndex;\n        } else if (typeof nextThumbsIndex === 'undefined') {\n          newThumbsIndex = prevThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex === currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = thumbsSwiper.params.slidesPerGroup > 1 ? nextThumbsIndex : currentThumbsIndex;\n        } else if (nextThumbsIndex - currentThumbsIndex < currentThumbsIndex - prevThumbsIndex) {\n          newThumbsIndex = nextThumbsIndex;\n        } else {\n          newThumbsIndex = prevThumbsIndex;\n        }\n\n        direction = swiper.activeIndex > swiper.previousIndex ? 'next' : 'prev';\n      } else {\n        newThumbsIndex = swiper.realIndex;\n        direction = newThumbsIndex > swiper.previousIndex ? 'next' : 'prev';\n      }\n\n      if (useOffset) {\n        newThumbsIndex += direction === 'next' ? autoScrollOffset : -1 * autoScrollOffset;\n      }\n\n      if (thumbsSwiper.visibleSlidesIndexes && thumbsSwiper.visibleSlidesIndexes.indexOf(newThumbsIndex) < 0) {\n        if (thumbsSwiper.params.centeredSlides) {\n          if (newThumbsIndex > currentThumbsIndex) {\n            newThumbsIndex = newThumbsIndex - Math.floor(slidesPerView / 2) + 1;\n          } else {\n            newThumbsIndex = newThumbsIndex + Math.floor(slidesPerView / 2) - 1;\n          }\n        } else if (newThumbsIndex > currentThumbsIndex && thumbsSwiper.params.slidesPerGroup === 1) {// newThumbsIndex = newThumbsIndex - slidesPerView + 1;\n        }\n\n        thumbsSwiper.slideTo(newThumbsIndex, initial ? 0 : undefined);\n      }\n    }\n  }\n\n  on('beforeInit', () => {\n    const {\n      thumbs\n    } = swiper.params;\n    if (!thumbs || !thumbs.swiper) return;\n    init();\n    update(true);\n  });\n  on('slideChange update resize observerUpdate', () => {\n    update();\n  });\n  on('setTransition', (_s, duration) => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n    thumbsSwiper.setTransition(duration);\n  });\n  on('beforeDestroy', () => {\n    const thumbsSwiper = swiper.thumbs.swiper;\n    if (!thumbsSwiper || thumbsSwiper.destroyed) return;\n\n    if (swiperCreated) {\n      thumbsSwiper.destroy();\n    }\n  });\n  Object.assign(swiper.thumbs, {\n    init,\n    update\n  });\n}","import { now } from '../../shared/utils.js';\nexport default function freeMode({\n  swiper,\n  extendParams,\n  emit,\n  once\n}) {\n  extendParams({\n    freeMode: {\n      enabled: false,\n      momentum: true,\n      momentumRatio: 1,\n      momentumBounce: true,\n      momentumBounceRatio: 1,\n      momentumVelocityRatio: 1,\n      sticky: false,\n      minimumVelocity: 0.02\n    }\n  });\n\n  function onTouchStart() {\n    const translate = swiper.getTranslate();\n    swiper.setTranslate(translate);\n    swiper.setTransition(0);\n    swiper.touchEventsData.velocities.length = 0;\n    swiper.freeMode.onTouchEnd({\n      currentPos: swiper.rtl ? swiper.translate : -swiper.translate\n    });\n  }\n\n  function onTouchMove() {\n    const {\n      touchEventsData: data,\n      touches\n    } = swiper; // Velocity\n\n    if (data.velocities.length === 0) {\n      data.velocities.push({\n        position: touches[swiper.isHorizontal() ? 'startX' : 'startY'],\n        time: data.touchStartTime\n      });\n    }\n\n    data.velocities.push({\n      position: touches[swiper.isHorizontal() ? 'currentX' : 'currentY'],\n      time: now()\n    });\n  }\n\n  function onTouchEnd({\n    currentPos\n  }) {\n    const {\n      params,\n      $wrapperEl,\n      rtlTranslate: rtl,\n      snapGrid,\n      touchEventsData: data\n    } = swiper; // Time diff\n\n    const touchEndTime = now();\n    const timeDiff = touchEndTime - data.touchStartTime;\n\n    if (currentPos < -swiper.minTranslate()) {\n      swiper.slideTo(swiper.activeIndex);\n      return;\n    }\n\n    if (currentPos > -swiper.maxTranslate()) {\n      if (swiper.slides.length < snapGrid.length) {\n        swiper.slideTo(snapGrid.length - 1);\n      } else {\n        swiper.slideTo(swiper.slides.length - 1);\n      }\n\n      return;\n    }\n\n    if (params.freeMode.momentum) {\n      if (data.velocities.length > 1) {\n        const lastMoveEvent = data.velocities.pop();\n        const velocityEvent = data.velocities.pop();\n        const distance = lastMoveEvent.position - velocityEvent.position;\n        const time = lastMoveEvent.time - velocityEvent.time;\n        swiper.velocity = distance / time;\n        swiper.velocity /= 2;\n\n        if (Math.abs(swiper.velocity) < params.freeMode.minimumVelocity) {\n          swiper.velocity = 0;\n        } // this implies that the user stopped moving a finger then released.\n        // There would be no events with distance zero, so the last event is stale.\n\n\n        if (time > 150 || now() - lastMoveEvent.time > 300) {\n          swiper.velocity = 0;\n        }\n      } else {\n        swiper.velocity = 0;\n      }\n\n      swiper.velocity *= params.freeMode.momentumVelocityRatio;\n      data.velocities.length = 0;\n      let momentumDuration = 1000 * params.freeMode.momentumRatio;\n      const momentumDistance = swiper.velocity * momentumDuration;\n      let newPosition = swiper.translate + momentumDistance;\n      if (rtl) newPosition = -newPosition;\n      let doBounce = false;\n      let afterBouncePosition;\n      const bounceAmount = Math.abs(swiper.velocity) * 20 * params.freeMode.momentumBounceRatio;\n      let needsLoopFix;\n\n      if (newPosition < swiper.maxTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition + swiper.maxTranslate() < -bounceAmount) {\n            newPosition = swiper.maxTranslate() - bounceAmount;\n          }\n\n          afterBouncePosition = swiper.maxTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.maxTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (newPosition > swiper.minTranslate()) {\n        if (params.freeMode.momentumBounce) {\n          if (newPosition - swiper.minTranslate() > bounceAmount) {\n            newPosition = swiper.minTranslate() + bounceAmount;\n          }\n\n          afterBouncePosition = swiper.minTranslate();\n          doBounce = true;\n          data.allowMomentumBounce = true;\n        } else {\n          newPosition = swiper.minTranslate();\n        }\n\n        if (params.loop && params.centeredSlides) needsLoopFix = true;\n      } else if (params.freeMode.sticky) {\n        let nextSlide;\n\n        for (let j = 0; j < snapGrid.length; j += 1) {\n          if (snapGrid[j] > -newPosition) {\n            nextSlide = j;\n            break;\n          }\n        }\n\n        if (Math.abs(snapGrid[nextSlide] - newPosition) < Math.abs(snapGrid[nextSlide - 1] - newPosition) || swiper.swipeDirection === 'next') {\n          newPosition = snapGrid[nextSlide];\n        } else {\n          newPosition = snapGrid[nextSlide - 1];\n        }\n\n        newPosition = -newPosition;\n      }\n\n      if (needsLoopFix) {\n        once('transitionEnd', () => {\n          swiper.loopFix();\n        });\n      } // Fix duration\n\n\n      if (swiper.velocity !== 0) {\n        if (rtl) {\n          momentumDuration = Math.abs((-newPosition - swiper.translate) / swiper.velocity);\n        } else {\n          momentumDuration = Math.abs((newPosition - swiper.translate) / swiper.velocity);\n        }\n\n        if (params.freeMode.sticky) {\n          // If freeMode.sticky is active and the user ends a swipe with a slow-velocity\n          // event, then durations can be 20+ seconds to slide one (or zero!) slides.\n          // It's easy to see this when simulating touch with mouse events. To fix this,\n          // limit single-slide swipes to the default slide duration. This also has the\n          // nice side effect of matching slide speed if the user stopped moving before\n          // lifting finger or mouse vs. moving slowly before lifting the finger/mouse.\n          // For faster swipes, also apply limits (albeit higher ones).\n          const moveDistance = Math.abs((rtl ? -newPosition : newPosition) - swiper.translate);\n          const currentSlideSize = swiper.slidesSizesGrid[swiper.activeIndex];\n\n          if (moveDistance < currentSlideSize) {\n            momentumDuration = params.speed;\n          } else if (moveDistance < 2 * currentSlideSize) {\n            momentumDuration = params.speed * 1.5;\n          } else {\n            momentumDuration = params.speed * 2.5;\n          }\n        }\n      } else if (params.freeMode.sticky) {\n        swiper.slideToClosest();\n        return;\n      }\n\n      if (params.freeMode.momentumBounce && doBounce) {\n        swiper.updateProgress(afterBouncePosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n        swiper.animating = true;\n        $wrapperEl.transitionEnd(() => {\n          if (!swiper || swiper.destroyed || !data.allowMomentumBounce) return;\n          emit('momentumBounce');\n          swiper.setTransition(params.speed);\n          setTimeout(() => {\n            swiper.setTranslate(afterBouncePosition);\n            $wrapperEl.transitionEnd(() => {\n              if (!swiper || swiper.destroyed) return;\n              swiper.transitionEnd();\n            });\n          }, 0);\n        });\n      } else if (swiper.velocity) {\n        emit('_freeModeNoMomentumRelease');\n        swiper.updateProgress(newPosition);\n        swiper.setTransition(momentumDuration);\n        swiper.setTranslate(newPosition);\n        swiper.transitionStart(true, swiper.swipeDirection);\n\n        if (!swiper.animating) {\n          swiper.animating = true;\n          $wrapperEl.transitionEnd(() => {\n            if (!swiper || swiper.destroyed) return;\n            swiper.transitionEnd();\n          });\n        }\n      } else {\n        swiper.updateProgress(newPosition);\n      }\n\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    } else if (params.freeMode.sticky) {\n      swiper.slideToClosest();\n      return;\n    } else if (params.freeMode) {\n      emit('_freeModeNoMomentumRelease');\n    }\n\n    if (!params.freeMode.momentum || timeDiff >= params.longSwipesMs) {\n      swiper.updateProgress();\n      swiper.updateActiveIndex();\n      swiper.updateSlidesClasses();\n    }\n  }\n\n  Object.assign(swiper, {\n    freeMode: {\n      onTouchStart,\n      onTouchMove,\n      onTouchEnd\n    }\n  });\n}","<script setup>\nimport {Zoom, FreeMode, Navigation, Thumbs, Lazy} from 'swiper';\nimport {onMounted, ref} from 'vue';\nimport {Swiper, SwiperSlide} from 'swiper/vue';\n\nconst props = defineProps(['images', 'preview']);\n\nconst thumbsSwiper = ref(null);\n\nconst setThumbsSwiper = (swiper) => {\n    thumbsSwiper.value = swiper;\n};\n\nconst modules = [Zoom, Lazy, Thumbs, FreeMode, Navigation];\n\nconst state = ref({\n    imagesLarge: [],\n    images: [],\n    preview: {},\n    index: null,\n    currentId: null,\n});\n\nonMounted(() => {\n    state.value.preview = {\n        'webp_src': route('images', props.preview.webp_src),\n        'webp_thumbnail': route('images.55', props.preview.webp_src),\n        'src': route('images', props.preview.src),\n        'thumbnail': route('images.55', props.preview.src),\n    }\n    const images = [...props.images].map(item => ({\n        'webp_src': route('images', item.webp_src),\n        'webp_thumbnail': route('images.55', item.webp_src),\n        'src': route('images', item.src),\n        'thumbnail': route('images.55', item.src),\n    }))\n    state.value.images.push(...images);\n});\n</script>\n\n<template>\n    <div class=\"block w-full\">\n        <swiper\n            :slides-per-view=\"1\"\n            :space-between=\"0\"\n            :modules=\"modules\"\n            :navigation=\"true\"\n            :thumbs=\"{ swiper: thumbsSwiper }\"\n            :zoom=\"true\"\n            class=\"swiper-product-slider\"\n            :lazy=\"true\"\n            :auto-heigth=\"true\"\n            :passiveListeners=\"false\"\n        >\n            <swiper-slide>\n                <div class=\"swiper-zoom-container\">\n                    <picture>\n                        <source :srcset=\"state.preview.webp_src\"\n                                type=\"image/webp\">\n                        <img\n                            :src=\"state.preview.src\"\n                            class=\"h-full w-full\"\n                        >\n                    </picture>\n                </div>\n            </swiper-slide>\n\n            <swiper-slide v-for=\"(image, i) in state.images\">\n                <div class=\"swiper-zoom-container\">\n                    <img :data-srcset=\"image.webp_src\"\n                         :data-src=\"image.src\"\n                         class=\"w-full h-full swiper-lazy\"\n                         :key=\"i\"\n                         @click=\"state.index = i\"\n                    >\n                    <div class=\"swiper-lazy-preloader swiper-lazy-preloader\"></div>\n                </div>\n            </swiper-slide>\n        </swiper>\n\n        <swiper\n            class=\"swiper-product-thumbs\"\n            @swiper=\"setThumbsSwiper\"\n            :slides-per-view=\"8\"\n            :freeMode=\"true\"\n            :watchSlidesProgress=\"true\"\n            :space-between=\"0\"\n            :modules=\"modules\"\n            :lazy=\"true\"\n        >\n            <swiper-slide>\n                <picture>\n                    <source :srcset=\"state.preview.webp_src\"\n                            type=\"image/webp\">\n                    <img\n                        :src=\"state.preview.src\"\n                        class=\"h-full w-full\"\n                    >\n                </picture>\n            </swiper-slide>\n            <swiper-slide v-for=\"(image, i) in state.images\">\n                <picture class=\"w-full\">\n                    <source :srcset=\"image.webp_thumbnail\"\n                            type=\"image/webp\">\n                    <img :data-src=\"image.thumbnail\"\n                         class=\"w-full h-full image\"\n                         :key=\"i\"\n                         @click=\"state.index = i\"\n                    >\n                </picture>\n            </swiper-slide>\n        </swiper>\n    </div>\n</template>\n\n<style>\n\n.swiper-product-slider .swiper-slide {\n    width: 100%;\n    height: auto;\n}\n\n.swiper-product-slider .swiper-slide img {\n    width: 100%;\n    height: auto;\n}\n</style>\n"],"names":["Zoom","swiper","extendParams","on","emit","window","getWindow","currentScale","isScaling","gesturesEnabled","fakeGestureTouched","fakeGestureMoved","gesture","image","velocity","scale","value","imageEl","slideEl","getDistanceBetweenTouches","e","x1","y1","x2","y2","onGestureStart","support","params","$","onGestureChange","zoom","onGestureEnd","device","onTouchStart","onTouchMove","getTranslate","scaledWidth","scaledHeight","onTouchEnd","momentumDurationX","momentumDurationY","momentumDistanceX","newPositionX","momentumDistanceY","newPositionY","momentumDuration","onTransitionEnd","zoomIn","touchX","touchY","offsetX","offsetY","diffX","diffY","translateX","translateY","imageWidth","imageHeight","translateMinX","translateMinY","translateMaxX","translateMaxY","slideWidth","slideHeight","zoomOut","zoomToggle","getListeners","passiveListener","activeListenerWithCapture","getSlideSelector","toggleGestures","method","slideSelector","enableGestures","disableGestures","enable","disable","_s","Thumb","initialized","swiperCreated","onThumbClick","thumbsSwiper","clickedIndex","clickedSlide","slideToIndex","currentIndex","prevIndex","nextIndex","init","thumbsParams","SwiperClass","isObject","thumbsSwiperParams","update","initial","slidesPerView","thumbsToActivate","thumbActiveClass","i","autoScrollOffset","useOffset","currentThumbsIndex","newThumbsIndex","direction","prevThumbsIndex","nextThumbsIndex","thumbs","duration","freeMode","once","translate","data","touches","now","currentPos","$wrapperEl","rtl","snapGrid","timeDiff","lastMoveEvent","velocityEvent","distance","time","momentumDistance","newPosition","doBounce","afterBouncePosition","bounceAmount","needsLoopFix","nextSlide","j","moveDistance","currentSlideSize","ref","setThumbsSwiper","modules","Lazy","Thumbs","FreeMode","Navigation","state","onMounted","props","images","item"],"mappings":"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","x_google_ignoreList":[0,1,2]}