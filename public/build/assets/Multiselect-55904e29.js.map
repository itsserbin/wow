{"version":3,"file":"Multiselect-55904e29.js","sources":["../../../resources/js/Components/Multiselect/multiselectMixin.js","../../../resources/js/Components/Multiselect/pointerMixin.js","../../../resources/js/Components/Multiselect/Multiselect.vue"],"sourcesContent":["function isEmpty(opt) {\n    if (opt === 0) return false\n    if (Array.isArray(opt) && opt.length === 0) return true\n    return !opt\n}\n\nfunction not(fun) {\n    return (...params) => !fun(...params)\n}\n\nfunction includes(str, query) {\n    /* istanbul ignore else */\n    if (str === undefined) str = 'undefined'\n    if (str === null) str = 'null'\n    if (str === false) str = 'false'\n    const text = str.toString().toLowerCase()\n    return text.indexOf(query.trim()) !== -1\n}\n\nfunction filterOptions(options, search, label, customLabel) {\n    return search ? options\n        .filter((option) => includes(customLabel(option, label), search))\n        .sort((a, b) => customLabel(a, label).length - customLabel(b, label).length) : options\n}\n\nfunction stripGroups(options) {\n    return options.filter((option) => !option.$isLabel)\n}\n\nfunction flattenOptions(values, label) {\n    return (options) =>\n        options.reduce((prev, curr) => {\n            /* istanbul ignore else */\n            if (curr[values] && curr[values].length) {\n                prev.push({\n                    $groupLabel: curr[label],\n                    $isLabel: true\n                })\n                return prev.concat(curr[values])\n            }\n            return prev\n        }, [])\n}\n\nfunction filterGroups(search, label, values, groupLabel, customLabel) {\n    return (groups) =>\n        groups.map((group) => {\n            /* istanbul ignore else */\n            if (!group[values]) {\n                console.warn(`Options passed to vue-multiselect do not contain groups, despite the config.`)\n                return []\n            }\n            const groupOptions = filterOptions(group[values], search, label, customLabel)\n\n            return groupOptions.length\n                ? {\n                    [groupLabel]: group[groupLabel],\n                    [values]: groupOptions\n                }\n                : []\n        })\n}\n\nconst flow = (...fns) => (x) => fns.reduce((v, f) => f(v), x)\n\nexport default {\n    data() {\n        return {\n            search: '',\n            isOpen: false,\n            preferredOpenDirection: 'below',\n            optimizedHeight: this.maxHeight\n        }\n    },\n    props: {\n        /**\n         * Decide whether to filter the results based on search query.\n         * Useful for async filtering, where we search through more complex data.\n         * @type {Boolean}\n         */\n        internalSearch: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Array of available options: Objects, Strings or Integers.\n         * If array of objects, visible label will default to option.label.\n         * If `labal` prop is passed, label will equal option['label']\n         * @type {Array}\n         */\n        options: {\n            type: Array,\n            required: true\n        },\n        /**\n         * Equivalent to the `multiple` attribute on a `<select>` input.\n         * @default false\n         * @type {Boolean}\n         */\n        multiple: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Key to compare objects\n         * @default 'id'\n         * @type {String}\n         */\n        trackBy: {\n            type: String\n        },\n        /**\n         * Label to look for in option Object\n         * @default 'label'\n         * @type {String}\n         */\n        label: {\n            type: String\n        },\n        /**\n         * Enable/disable search in options\n         * @default true\n         * @type {Boolean}\n         */\n        searchable: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Clear the search input after `)\n         * @default true\n         * @type {Boolean}\n         */\n        clearOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Hide already selected options\n         * @default false\n         * @type {Boolean}\n         */\n        hideSelected: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Equivalent to the `placeholder` attribute on a `<select>` input.\n         * @default 'Select option'\n         * @type {String}\n         */\n        placeholder: {\n            type: String,\n            default: 'Select option'\n        },\n        /**\n         * Allow to remove all selected values\n         * @default true\n         * @type {Boolean}\n         */\n        allowEmpty: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Reset this.internalValue, this.search after this.internalValue changes.\n         * Useful if want to create a stateless dropdown.\n         * @default false\n         * @type {Boolean}\n         */\n        resetAfter: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Enable/disable closing after selecting an option\n         * @default true\n         * @type {Boolean}\n         */\n        closeOnSelect: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Function to interpolate the custom label\n         * @default false\n         * @type {Function}\n         */\n        customLabel: {\n            type: Function,\n            default(option, label) {\n                if (isEmpty(option)) return ''\n                return label ? option[label] : option\n            }\n        },\n        /**\n         * Disable / Enable tagging\n         * @default false\n         * @type {Boolean}\n         */\n        taggable: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * String to show when highlighting a potential tag\n         * @default 'Press enter to create a tag'\n         * @type {String}\n         */\n        tagPlaceholder: {\n            type: String,\n            default: 'Press enter to create a tag'\n        },\n        /**\n         * By default new tags will appear above the search results.\n         * Changing to 'bottom' will revert this behaviour\n         * and will proritize the search results\n         * @default 'top'\n         * @type {String}\n         */\n        tagPosition: {\n            type: String,\n            default: 'top'\n        },\n        /**\n         * Number of allowed selected options. No limit if 0.\n         * @default 0\n         * @type {Number}\n         */\n        max: {\n            type: [Number, Boolean],\n            default: false\n        },\n        /**\n         * Will be passed with all events as second param.\n         * Useful for identifying events origin.\n         * @default null\n         * @type {String|Integer}\n         */\n        id: {\n            default: null\n        },\n        /**\n         * Limits the options displayed in the dropdown\n         * to the first X options.\n         * @default 1000\n         * @type {Integer}\n         */\n        optionsLimit: {\n            type: Number,\n            default: 1000\n        },\n        /**\n         * Name of the property containing\n         * the group values\n         * @default 1000\n         * @type {String}\n         */\n        groupValues: {\n            type: String\n        },\n        /**\n         * Name of the property containing\n         * the group label\n         * @default 1000\n         * @type {String}\n         */\n        groupLabel: {\n            type: String\n        },\n        /**\n         * Allow to select all group values\n         * by selecting the group label\n         * @default false\n         * @type {Boolean}\n         */\n        groupSelect: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Array of keyboard keys to block\n         * when selecting\n         * @default 1000\n         * @type {String}\n         */\n        blockKeys: {\n            type: Array,\n            default() {\n                return []\n            }\n        },\n        /**\n         * Prevent from wiping up the search value\n         * @default false\n         * @type {Boolean}\n         */\n        preserveSearch: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Select 1st options if value is empty\n         * @default false\n         * @type {Boolean}\n         */\n        preselectFirst: {\n            type: Boolean,\n            default: false\n        }\n    },\n    mounted() {\n        /* istanbul ignore else */\n        if (!this.multiple && this.max) {\n            console.warn('[Vue-Multiselect warn]: Max prop should not be used when prop Multiple equals false.')\n        }\n        if (\n            this.preselectFirst &&\n            !this.internalValue.length &&\n            this.options.length\n        ) {\n            this.select(this.filteredOptions[0])\n        }\n    },\n    computed: {\n        internalValue() {\n            return this.modelValue || this.modelValue === 0\n                ? Array.isArray(this.modelValue) ? this.modelValue : [this.modelValue]\n                : []\n        },\n        filteredOptions() {\n            const search = this.search || ''\n            const normalizedSearch = search.toLowerCase().trim()\n\n            let options = this.options.concat()\n\n            /* istanbul ignore else */\n            if (this.internalSearch) {\n                options = this.groupValues\n                    ? this.filterAndFlat(options, normalizedSearch, this.label)\n                    : filterOptions(options, normalizedSearch, this.label, this.customLabel)\n            } else {\n                options = this.groupValues ? flattenOptions(this.groupValues, this.groupLabel)(options) : options\n            }\n\n            options = this.hideSelected\n                ? options.filter(not(this.isSelected))\n                : options\n\n            /* istanbul ignore else */\n            if (this.taggable && normalizedSearch.length && !this.isExistingOption(normalizedSearch)) {\n                if (this.tagPosition === 'bottom') {\n                    options.push({isTag: true, label: search})\n                } else {\n                    options.unshift({isTag: true, label: search})\n                }\n            }\n\n            return options.slice(0, this.optionsLimit)\n        },\n        valueKeys() {\n            if (this.trackBy) {\n                return this.internalValue.map((element) => element[this.trackBy])\n            } else {\n                return this.internalValue\n            }\n        },\n        optionKeys() {\n            const options = this.groupValues ? this.flatAndStrip(this.options) : this.options\n            return options.map((element) => this.customLabel(element, this.label).toString().toLowerCase())\n        },\n        currentOptionLabel() {\n            return this.multiple\n                ? this.searchable ? '' : this.placeholder\n                : this.internalValue.length\n                    ? this.getOptionLabel(this.internalValue[0])\n                    : this.searchable ? '' : this.placeholder\n        }\n    },\n    watch: {\n        internalValue() {\n            /* istanbul ignore else */\n            if (this.resetAfter && this.internalValue.length) {\n                this.search = ''\n                this.$emit('update:modelValue', this.multiple ? [] : null)\n            }\n        },\n        search() {\n            this.$emit('search-change', this.search)\n        }\n    },\n    emits: ['open', 'search-change', 'close', 'select', 'update:modelValue', 'remove', 'tag'],\n    methods: {\n        /**\n         * Returns the internalValue in a way it can be emited to the parent\n         * @returns {Object||Array||String||Integer}\n         */\n        getValue() {\n            return this.multiple\n                ? this.internalValue\n                : this.internalValue.length === 0\n                    ? null\n                    : this.internalValue[0]\n        },\n        /**\n         * Filters and then flattens the options list\n         * @param  {Array}\n         * @return {Array} returns a filtered and flat options list\n         */\n        filterAndFlat(options, search, label) {\n            return flow(\n                filterGroups(search, label, this.groupValues, this.groupLabel, this.customLabel),\n                flattenOptions(this.groupValues, this.groupLabel)\n            )(options)\n        },\n        /**\n         * Flattens and then strips the group labels from the options list\n         * @param  {Array}\n         * @return {Array} returns a flat options list without group labels\n         */\n        flatAndStrip(options) {\n            return flow(\n                flattenOptions(this.groupValues, this.groupLabel),\n                stripGroups\n            )(options)\n        },\n        /**\n         * Updates the search value\n         * @param  {String}\n         */\n        updateSearch(query) {\n            this.search = query\n        },\n        /**\n         * Finds out if the given query is already present\n         * in the available options\n         * @param  {String}\n         * @return {Boolean} returns true if element is available\n         */\n        isExistingOption(query) {\n            return !this.options\n                ? false\n                : this.optionKeys.indexOf(query) > -1\n        },\n        /**\n         * Finds out if the given element is already present\n         * in the result value\n         * @param  {Object||String||Integer} option passed element to check\n         * @returns {Boolean} returns true if element is selected\n         */\n        isSelected(option) {\n            const opt = this.trackBy\n                ? option[this.trackBy]\n                : option\n            return this.valueKeys.indexOf(opt) > -1\n        },\n        /**\n         * Finds out if the given option is disabled\n         * @param  {Object||String||Integer} option passed element to check\n         * @returns {Boolean} returns true if element is disabled\n         */\n        isOptionDisabled(option) {\n            return !!option.$isDisabled\n        },\n        /**\n         * Returns empty string when options is null/undefined\n         * Returns tag query if option is tag.\n         * Returns the customLabel() results and casts it to string.\n         *\n         * @param  {Object||String||Integer} Passed option\n         * @returns {Object||String}\n         */\n        getOptionLabel(option) {\n            if (isEmpty(option)) return ''\n            /* istanbul ignore else */\n            if (option.isTag) return option.label\n            /* istanbul ignore else */\n            if (option.$isLabel) return option.$groupLabel\n\n            const label = this.customLabel(option, this.label)\n            /* istanbul ignore else */\n            if (isEmpty(label)) return ''\n            return label\n        },\n        /**\n         * Add the given option to the list of selected options\n         * or sets the option as the selected option.\n         * If option is already selected -> remove it from the results.\n         *\n         * @param  {Object||String||Integer} option to select/deselect\n         * @param  {Boolean} block removing\n         */\n        select(option, key) {\n            /* istanbul ignore else */\n            if (option.$isLabel && this.groupSelect) {\n                this.selectGroup(option)\n                return\n            }\n            if (this.blockKeys.indexOf(key) !== -1 ||\n                this.disabled ||\n                option.$isDisabled ||\n                option.$isLabel\n            ) return\n            /* istanbul ignore else */\n            if (this.max && this.multiple && this.internalValue.length === this.max) return\n            /* istanbul ignore else */\n            if (key === 'Tab' && !this.pointerDirty) return\n            if (option.isTag) {\n                this.$emit('tag', option.label, this.id)\n                this.search = ''\n                if (this.closeOnSelect && !this.multiple) this.deactivate()\n            } else {\n                const isSelected = this.isSelected(option)\n\n                if (isSelected) {\n                    if (key !== 'Tab') this.removeElement(option)\n                    return\n                }\n\n                this.$emit('select', option, this.id)\n\n                if (this.multiple) {\n                    this.$emit('update:modelValue', this.internalValue.concat([option]))\n                } else {\n                    this.$emit('update:modelValue', option)\n                }\n\n                /* istanbul ignore else */\n                if (this.clearOnSelect) this.search = ''\n            }\n            /* istanbul ignore else */\n            if (this.closeOnSelect) this.deactivate()\n        },\n        /**\n         * Add the given group options to the list of selected options\n         * If all group optiona are already selected -> remove it from the results.\n         *\n         * @param  {Object||String||Integer} group to select/deselect\n         */\n        selectGroup(selectedGroup) {\n            const group = this.options.find((option) => {\n                return option[this.groupLabel] === selectedGroup.$groupLabel\n            })\n\n            if (!group) return\n\n            if (this.wholeGroupSelected(group)) {\n                this.$emit('remove', group[this.groupValues], this.id)\n\n                const newValue = this.internalValue.filter(\n                    (option) => group[this.groupValues].indexOf(option) === -1\n                )\n\n                this.$emit('update:modelValue', newValue)\n            } else {\n                const optionsToAdd = group[this.groupValues].filter(\n                    (option) => !(this.isOptionDisabled(option) || this.isSelected(option))\n                )\n\n                this.$emit('select', optionsToAdd, this.id)\n                this.$emit(\n                    'update:modelValue',\n                    this.internalValue.concat(optionsToAdd)\n                )\n            }\n\n            if (this.closeOnSelect) this.deactivate()\n        },\n        /**\n         * Helper to identify if all values in a group are selected\n         *\n         * @param {Object} group to validated selected values against\n         */\n        wholeGroupSelected(group) {\n            return group[this.groupValues].every((option) => this.isSelected(option) || this.isOptionDisabled(option)\n            )\n        },\n        /**\n         * Helper to identify if all values in a group are disabled\n         *\n         * @param {Object} group to check for disabled values\n         */\n        wholeGroupDisabled(group) {\n            return group[this.groupValues].every(this.isOptionDisabled)\n        },\n        /**\n         * Removes the given option from the selected options.\n         * Additionally checks this.allowEmpty prop if option can be removed when\n         * it is the last selected option.\n         *\n         * @param  {type} option description\n         * @return {type}        description\n         */\n        removeElement(option, shouldClose = true) {\n            /* istanbul ignore else */\n            if (this.disabled) return\n            /* istanbul ignore else */\n            if (option.$isDisabled) return\n            /* istanbul ignore else */\n            if (!this.allowEmpty && this.internalValue.length <= 1) {\n                this.deactivate()\n                return\n            }\n\n            const index = typeof option === 'object'\n                ? this.valueKeys.indexOf(option[this.trackBy])\n                : this.valueKeys.indexOf(option)\n\n            this.$emit('remove', option, this.id)\n            if (this.multiple) {\n                const newValue = this.internalValue.slice(0, index).concat(this.internalValue.slice(index + 1))\n                this.$emit('update:modelValue', newValue)\n            } else {\n                this.$emit('update:modelValue', null)\n            }\n\n            /* istanbul ignore else */\n            if (this.closeOnSelect && shouldClose) this.deactivate()\n        },\n        /**\n         * Calls this.removeElement() with the last element\n         * from this.internalValue (selected element Array)\n         *\n         * @fires this#removeElement\n         */\n        removeLastElement() {\n            /* istanbul ignore else */\n            if (this.blockKeys.indexOf('Delete') !== -1) return\n            /* istanbul ignore else */\n            if (this.search.length === 0 && Array.isArray(this.internalValue) && this.internalValue.length) {\n                this.removeElement(this.internalValue[this.internalValue.length - 1], false)\n            }\n        },\n        /**\n         * Opens the multiselect’s dropdown.\n         * Sets this.isOpen to TRUE\n         */\n        activate() {\n            /* istanbul ignore else */\n            if (this.isOpen || this.disabled) return\n\n            this.adjustPosition()\n            /* istanbul ignore else  */\n            if (this.groupValues && this.pointer === 0 && this.filteredOptions.length) {\n                this.pointer = 1\n            }\n\n            this.isOpen = true\n            /* istanbul ignore else  */\n            if (this.searchable) {\n                if (!this.preserveSearch) this.search = ''\n                this.$nextTick(() => this.$refs.search && this.$refs.search.focus())\n            } else {\n                this.$el.focus()\n            }\n            this.$emit('open', this.id)\n        },\n        /**\n         * Closes the multiselect’s dropdown.\n         * Sets this.isOpen to FALSE\n         */\n        deactivate() {\n            /* istanbul ignore else */\n            if (!this.isOpen) return\n\n            this.isOpen = false\n            /* istanbul ignore else  */\n            if (this.searchable) {\n                this.$refs.search && this.$refs.search.blur()\n            } else {\n                this.$el.blur()\n            }\n            if (!this.preserveSearch) this.search = ''\n            this.$emit('close', this.getValue(), this.id)\n        },\n        /**\n         * Call this.activate() or this.deactivate()\n         * depending on this.isOpen value.\n         *\n         * @fires this#activate || this#deactivate\n         * @property {Boolean} isOpen indicates if dropdown is open\n         */\n        toggle() {\n            this.isOpen\n                ? this.deactivate()\n                : this.activate()\n        },\n        /**\n         * Updates the hasEnoughSpace variable used for\n         * detecting where to expand the dropdown\n         */\n        adjustPosition() {\n            if (typeof window === 'undefined') return\n\n            const spaceAbove = this.$el.getBoundingClientRect().top\n            const spaceBelow = window.innerHeight - this.$el.getBoundingClientRect().bottom\n            const hasEnoughSpaceBelow = spaceBelow > this.maxHeight\n\n            if (hasEnoughSpaceBelow || spaceBelow > spaceAbove || this.openDirection === 'below' || this.openDirection === 'bottom') {\n                this.preferredOpenDirection = 'below'\n                this.optimizedHeight = Math.min(spaceBelow - 40, this.maxHeight)\n            } else {\n                this.preferredOpenDirection = 'above'\n                this.optimizedHeight = Math.min(spaceAbove - 40, this.maxHeight)\n            }\n        }\n    }\n}\n","export default {\n    data() {\n        return {\n            pointer: 0,\n            pointerDirty: false\n        }\n    },\n    props: {\n        /**\n         * Enable/disable highlighting of the pointed value.\n         * @type {Boolean}\n         * @default true\n         */\n        showPointer: {\n            type: Boolean,\n            default: true\n        },\n        optionHeight: {\n            type: Number,\n            default: 40\n        }\n    },\n    computed: {\n        pointerPosition() {\n            return this.pointer * this.optionHeight\n        },\n        visibleElements() {\n            return this.optimizedHeight / this.optionHeight\n        }\n    },\n    watch: {\n        filteredOptions() {\n            this.pointerAdjust()\n        },\n        isOpen() {\n            this.pointerDirty = false\n        },\n        pointer() {\n            this.$refs.search && this.$refs.search.setAttribute('aria-activedescendant', this.id + '-' + this.pointer.toString())\n        }\n    },\n    methods: {\n        optionHighlight(index, option) {\n            return {\n                'multiselect__option--highlight': index === this.pointer && this.showPointer,\n                'multiselect__option--selected': this.isSelected(option)\n            }\n        },\n        groupHighlight(index, selectedGroup) {\n            if (!this.groupSelect) {\n                return [\n                    'multiselect__option--disabled',\n                    {'multiselect__option--group': selectedGroup.$isLabel}\n                ]\n            }\n\n            const group = this.options.find((option) => {\n                return option[this.groupLabel] === selectedGroup.$groupLabel\n            })\n\n            return group && !this.wholeGroupDisabled(group) ? [\n                'multiselect__option--group',\n                {'multiselect__option--highlight': index === this.pointer && this.showPointer},\n                {'multiselect__option--group-selected': this.wholeGroupSelected(group)}\n            ] : 'multiselect__option--disabled'\n        },\n        addPointerElement({key} = 'Enter') {\n            /* istanbul ignore else */\n            if (this.filteredOptions.length > 0) {\n                this.select(this.filteredOptions[this.pointer], key)\n            }\n            this.pointerReset()\n        },\n        pointerForward() {\n            /* istanbul ignore else */\n            if (this.pointer < this.filteredOptions.length - 1) {\n                this.pointer++\n                /* istanbul ignore next */\n                if (this.$refs.list.scrollTop <= this.pointerPosition - (this.visibleElements - 1) * this.optionHeight) {\n                    this.$refs.list.scrollTop = this.pointerPosition - (this.visibleElements - 1) * this.optionHeight\n                }\n                /* istanbul ignore else */\n                if (\n                    this.filteredOptions[this.pointer] &&\n                    this.filteredOptions[this.pointer].$isLabel &&\n                    !this.groupSelect\n                ) this.pointerForward()\n            }\n            this.pointerDirty = true\n        },\n        pointerBackward() {\n            if (this.pointer > 0) {\n                this.pointer--\n                /* istanbul ignore else */\n                if (this.$refs.list.scrollTop >= this.pointerPosition) {\n                    this.$refs.list.scrollTop = this.pointerPosition\n                }\n                /* istanbul ignore else */\n                if (\n                    this.filteredOptions[this.pointer] &&\n                    this.filteredOptions[this.pointer].$isLabel &&\n                    !this.groupSelect\n                ) this.pointerBackward()\n            } else {\n                /* istanbul ignore else */\n                if (\n                    this.filteredOptions[this.pointer] &&\n                    this.filteredOptions[0].$isLabel &&\n                    !this.groupSelect\n                ) this.pointerForward()\n            }\n            this.pointerDirty = true\n        },\n        pointerReset() {\n            /* istanbul ignore else */\n            if (!this.closeOnSelect) return\n            this.pointer = 0\n            /* istanbul ignore else */\n            if (this.$refs.list) {\n                this.$refs.list.scrollTop = 0\n            }\n        },\n        pointerAdjust() {\n            /* istanbul ignore else */\n            if (this.pointer >= this.filteredOptions.length - 1) {\n                this.pointer = this.filteredOptions.length\n                    ? this.filteredOptions.length - 1\n                    : 0\n            }\n\n            if (this.filteredOptions.length > 0 &&\n                this.filteredOptions[this.pointer].$isLabel &&\n                !this.groupSelect\n            ) {\n                this.pointerForward()\n            }\n        },\n        pointerSet(index) {\n            this.pointer = index\n            this.pointerDirty = true\n        }\n    }\n}\n","<script>\nimport multiselectMixin from './multiselectMixin'\nimport pointerMixin from './pointerMixin'\n\nexport default {\n    name: 'vue-multiselect',\n    mixins: [multiselectMixin, pointerMixin],\n    props: {\n        /**\n         * name attribute to match optional label element\n         * @default ''\n         * @type {String}\n         */\n        name: {\n            type: String,\n            default: ''\n        },\n        /**\n         * Presets the selected options value.\n         * @type {Object||Array||String||Integer}\n         */\n        modelValue: {\n            type: null,\n            default() {\n                return []\n            }\n        },\n        /**\n         * String to show when pointing to an option\n         * @default 'Press enter to select'\n         * @type {String}\n         */\n        selectLabel: {\n            type: String,\n            default: 'Press enter to select'\n        },\n        /**\n         * String to show when pointing to an option\n         * @default 'Press enter to select'\n         * @type {String}\n         */\n        selectGroupLabel: {\n            type: String,\n            default: 'Press enter to select group'\n        },\n        /**\n         * String to show next to selected option\n         * @default 'Selected'\n         * @type {String}\n         */\n        selectedLabel: {\n            type: String,\n            default: 'Selected'\n        },\n        /**\n         * String to show when pointing to an already selected option\n         * @default 'Press enter to remove'\n         * @type {String}\n         */\n        deselectLabel: {\n            type: String,\n            default: 'Press enter to remove'\n        },\n        /**\n         * String to show when pointing to an already selected option\n         * @default 'Press enter to remove'\n         * @type {String}\n         */\n        deselectGroupLabel: {\n            type: String,\n            default: 'Press enter to deselect group'\n        },\n        /**\n         * Decide whether to show pointer labels\n         * @default true\n         * @type {Boolean}\n         */\n        showLabels: {\n            type: Boolean,\n            default: true\n        },\n        /**\n         * Limit the display of selected options. The rest will be hidden within the limitText string.\n         * @default 99999\n         * @type {Integer}\n         */\n        limit: {\n            type: Number,\n            default: 99999\n        },\n        /**\n         * Sets maxHeight style value of the dropdown\n         * @default 300\n         * @type {Integer}\n         */\n        maxHeight: {\n            type: Number,\n            default: 300\n        },\n        /**\n         * Function that process the message shown when selected\n         * elements pass the defined limit.\n         * @default 'and * more'\n         * @param {Int} count Number of elements more than limit\n         * @type {Function}\n         */\n        limitText: {\n            type: Function,\n            default: (count) => `and ${count} more`\n        },\n        /**\n         * Set true to trigger the loading spinner.\n         * @default False\n         * @type {Boolean}\n         */\n        loading: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Disables the multiselect if true.\n         * @default false\n         * @type {Boolean}\n         */\n        disabled: {\n            type: Boolean,\n            default: false\n        },\n        /**\n         * Fixed opening direction\n         * @default ''\n         * @type {String}\n         */\n        openDirection: {\n            type: String,\n            default: ''\n        },\n        /**\n         * Shows slot with message about empty options\n         * @default true\n         * @type {Boolean}\n         */\n        showNoOptions: {\n            type: Boolean,\n            default: true\n        },\n        showNoResults: {\n            type: Boolean,\n            default: true\n        },\n        tabindex: {\n            type: Number,\n            default: 0\n        }\n    },\n    computed: {\n        isSingleLabelVisible() {\n            return (\n                (this.singleValue || this.singleValue === 0) &&\n                (!this.isOpen || !this.searchable) &&\n                !this.visibleValues.length\n            )\n        },\n        isPlaceholderVisible() {\n            return !this.internalValue.length && (!this.searchable || !this.isOpen)\n        },\n        visibleValues() {\n            return this.multiple ? this.internalValue.slice(0, this.limit) : []\n        },\n        singleValue() {\n            return this.internalValue[0]\n        },\n        deselectLabelText() {\n            return this.showLabels ? this.deselectLabel : ''\n        },\n        deselectGroupLabelText() {\n            return this.showLabels ? this.deselectGroupLabel : ''\n        },\n        selectLabelText() {\n            return this.showLabels ? this.selectLabel : ''\n        },\n        selectGroupLabelText() {\n            return this.showLabels ? this.selectGroupLabel : ''\n        },\n        selectedLabelText() {\n            return this.showLabels ? this.selectedLabel : ''\n        },\n        inputStyle() {\n            if (\n                this.searchable ||\n                (this.multiple && this.modelValue && this.modelValue.length)\n            ) {\n                // Hide input by setting the width to 0 allowing it to receive focus\n                return this.isOpen\n                    ? {width: '100%'}\n                    : {width: '0', position: 'absolute', padding: '0'}\n            }\n            return ''\n        },\n        contentStyle() {\n            return this.options.length\n                ? {display: 'inline-block'}\n                : {display: 'block'}\n        },\n        isAbove() {\n            if (this.openDirection === 'above' || this.openDirection === 'top') {\n                return true\n            } else if (\n                this.openDirection === 'below' ||\n                this.openDirection === 'bottom'\n            ) {\n                return false\n            } else {\n                return this.preferredOpenDirection === 'above'\n            }\n        },\n        showSearchInput() {\n            return (\n                this.searchable &&\n                (this.hasSingleSelectedSlot &&\n                (this.visibleSingleValue || this.visibleSingleValue === 0)\n                    ? this.isOpen\n                    : true)\n            )\n        }\n    }\n}\n</script>\n\n<template>\n    <div\n        :tabindex=\"searchable ? -1 : tabindex\"\n        :class=\"{ 'multiselect--active': isOpen, 'multiselect--disabled': disabled, 'multiselect--above': isAbove }\"\n        @focus=\"activate()\"\n        @blur=\"searchable ? false : deactivate()\"\n        @keydown.self.down.prevent=\"pointerForward()\"\n        @keydown.self.up.prevent=\"pointerBackward()\"\n        @keypress.enter.tab.stop.self=\"addPointerElement($event)\"\n        @keyup.esc=\"deactivate()\"\n        class=\"multiselect\"\n        role=\"combobox\"\n        :aria-owns=\"'listbox-'+id\">\n        <slot name=\"caret\" :toggle=\"toggle\">\n            <div @mousedown.prevent.stop=\"toggle()\" class=\"multiselect__select\"></div>\n        </slot>\n        <slot name=\"clear\" :search=\"search\"></slot>\n        <div ref=\"tags\" class=\"multiselect__tags bg-white dark:bg-gray-800 rounded-lg p-5\">\n            <slot\n                name=\"selection\"\n                :search=\"search\"\n                :remove=\"removeElement\"\n                :values=\"visibleValues\"\n                :is-open=\"isOpen\"\n            >\n                <div class=\"multiselect__tags-wrap\" v-show=\"visibleValues.length > 0\">\n                    <template v-for=\"(option, index) of visibleValues\" @mousedown.prevent>\n                        <slot name=\"tag\" :option=\"option\" :search=\"search\" :remove=\"removeElement\">\n              <span class=\"multiselect__tag\" :key=\"index\">\n                <span v-text=\"getOptionLabel(option)\"></span>\n                <i tabindex=\"1\" @keypress.enter.prevent=\"removeElement(option)\"\n                   @mousedown.prevent=\"removeElement(option)\" class=\"multiselect__tag-icon\"></i>\n              </span>\n                        </slot>\n                    </template>\n                </div>\n                <template v-if=\"internalValue && internalValue.length > limit\">\n                    <slot name=\"limit\">\n                        <strong class=\"multiselect__strong\" v-text=\"limitText(internalValue.length - limit)\"/>\n                    </slot>\n                </template>\n            </slot>\n            <transition name=\"multiselect__loading\">\n                <slot name=\"loading\">\n                    <div v-show=\"loading\" class=\"multiselect__spinner\"/>\n                </slot>\n            </transition>\n            <input\n                ref=\"search\"\n                v-if=\"searchable\"\n                :name=\"name\"\n                :id=\"id\"\n                type=\"text\"\n                autocomplete=\"off\"\n                spellcheck=\"false\"\n                :placeholder=\"placeholder\"\n                :style=\"inputStyle\"\n                :value=\"search\"\n                :disabled=\"disabled\"\n                :tabindex=\"tabindex\"\n                @input=\"updateSearch($event.target.value)\"\n                @focus.prevent=\"activate()\"\n                @blur.prevent=\"deactivate()\"\n                @keyup.esc=\"deactivate()\"\n                @keydown.down.prevent=\"pointerForward()\"\n                @keydown.up.prevent=\"pointerBackward()\"\n                @keypress.enter.prevent.stop.self=\"addPointerElement($event)\"\n                @keydown.delete.stop=\"removeLastElement()\"\n                class=\"\n                        multiselect__input\n                        text-gray-900\n                        text-sm\n                        rounded-l\n                        block\n                        w-full\n                        h-5\n                        ring-0\n                        border-0\n                        dark:bg-gray-800\n                        dark:placeholder-gray-400\n                        dark:text-white\n                        dark:focus:text-white\n                        focus:ring-0\n                        focus:border-gray-700\n                        focus:pl-0\n                \"\n                :aria-controls=\"'listbox-'+id\"\n            />\n            <span\n                v-if=\"isSingleLabelVisible\"\n                class=\"multiselect__single text-gray-900 dark:text-white \"\n                @mousedown.prevent=\"toggle\"\n            >\n        <slot name=\"singleLabel\" :option=\"singleValue\">\n          {{ currentOptionLabel }}\n        </slot>\n      </span>\n            <span\n                v-if=\"isPlaceholderVisible\"\n                class=\"multiselect__placeholder  text-gray-900 dark:text-white\"\n                @mousedown.prevent=\"toggle\"\n            >\n        <slot name=\"placeholder\">\n          {{ placeholder }}\n        </slot>\n      </span>\n        </div>\n        <transition name=\"multiselect\">\n            <div\n                class=\"multiselect__content-wrapper\"\n                v-show=\"isOpen\"\n                @focus=\"activate\"\n                tabindex=\"-1\"\n                @mousedown.prevent\n                :style=\"{ maxHeight: optimizedHeight + 'px' }\"\n                ref=\"list\"\n            >\n                <ul class=\"multiselect__content bg-white dark:bg-gray-800 text-gray-900 dark:text-white dark:border-gray-700\"\n                    :style=\"contentStyle\" role=\"listbox\" :id=\"'listbox-'+id\">\n                    <slot name=\"beforeList\"></slot>\n                    <li v-if=\"multiple && max === internalValue.length\">\n            <span class=\"multiselect__option\">\n              <slot name=\"maxElements\">Maximum of {{ max }} options selected. First remove a selected option to select another.</slot>\n            </span>\n                    </li>\n                    <template v-if=\"!max || internalValue.length < max\">\n                        <li class=\"multiselect__element\"\n                            v-for=\"(option, index) of filteredOptions\"\n                            :key=\"index\"\n                            v-bind:id=\"id + '-' + index\"\n                            v-bind:role=\"!(option && (option.$isLabel || option.$isDisabled)) ? 'option' : null\">\n              <span\n                  v-if=\"!(option && (option.$isLabel || option.$isDisabled))\"\n                  :class=\"optionHighlight(index, option)\"\n                  @click.stop=\"select(option)\"\n                  @mouseenter.self=\"pointerSet(index)\"\n                  :data-select=\"option && option.isTag ? tagPlaceholder : selectLabelText\"\n                  :data-selected=\"selectedLabelText\"\n                  :data-deselect=\"deselectLabelText\"\n                  class=\"multiselect__option\">\n                <slot name=\"option\" :option=\"option\" :search=\"search\" :index=\"index\">\n                  <span>{{ getOptionLabel(option) }}</span>\n                </slot>\n              </span>\n                            <span\n                                v-if=\"option && (option.$isLabel || option.$isDisabled)\"\n                                :data-select=\"groupSelect && selectGroupLabelText\"\n                                :data-deselect=\"groupSelect && deselectGroupLabelText\"\n                                :class=\"groupHighlight(index, option)\"\n                                @mouseenter.self=\"groupSelect && pointerSet(index)\"\n                                @mousedown.prevent=\"selectGroup(option)\"\n                                class=\"multiselect__option\">\n                <slot name=\"option\" :option=\"option\" :search=\"search\" :index=\"index\">\n                  <span>{{ getOptionLabel(option) }}</span>\n                </slot>\n              </span>\n                        </li>\n                    </template>\n                    <li v-show=\"showNoResults && (filteredOptions.length === 0 && search && !loading)\">\n            <span class=\"multiselect__option\">\n              <slot name=\"noResult\" :search=\"search\">No elements found. Consider changing the search query.</slot>\n            </span>\n                    </li>\n                    <li v-show=\"showNoOptions && (options.length === 0 && !search && !loading)\">\n            <span class=\"multiselect__option\">\n              <slot name=\"noOptions\">List is empty.</slot>\n            </span>\n                    </li>\n                    <slot name=\"afterList\"></slot>\n                </ul>\n            </div>\n        </transition>\n    </div>\n</template>\n\n<style>\n\nfieldset[disabled] .multiselect {\n    pointer-events: none;\n}\n\n.multiselect__spinner {\n    position: absolute;\n    right: 1px;\n    top: 1px;\n    width: 48px;\n    height: 35px;\n    background: #fff;\n    display: block;\n}\n\n.multiselect__spinner::before,\n.multiselect__spinner::after {\n    position: absolute;\n    content: \"\";\n    top: 50%;\n    left: 50%;\n    margin: -8px 0 0 -8px;\n    width: 16px;\n    height: 16px;\n    border-radius: 100%;\n    border-color: #41b883 transparent transparent;\n    border-style: solid;\n    border-width: 2px;\n    box-shadow: 0 0 0 1px transparent;\n}\n\n.multiselect__spinner::before {\n    animation: spinning 2.4s cubic-bezier(0.41, 0.26, 0.2, 0.62);\n    animation-iteration-count: infinite;\n}\n\n.multiselect__spinner::after {\n    animation: spinning 2.4s cubic-bezier(0.51, 0.09, 0.21, 0.8);\n    animation-iteration-count: infinite;\n}\n\n.multiselect__loading-enter-active,\n.multiselect__loading-leave-active {\n    transition: opacity 0.4s ease-in-out;\n    opacity: 1;\n}\n\n.multiselect__loading-enter,\n.multiselect__loading-leave-active {\n    opacity: 0;\n}\n\n.multiselect,\n.multiselect__input,\n.multiselect__single {\n    font-family: inherit;\n    font-size: 16px;\n    touch-action: manipulation;\n}\n\n.multiselect {\n    box-sizing: content-box;\n    display: block;\n    position: relative;\n    width: 100%;\n    min-height: 40px;\n    text-align: left;\n    color: #35495e;\n}\n\n.multiselect * {\n    box-sizing: border-box;\n}\n\n.multiselect:focus {\n    outline: none;\n}\n\n.multiselect--disabled {\n    background: #ededed;\n    pointer-events: none;\n    opacity: 0.6;\n}\n\n.multiselect--active {\n    z-index: 50;\n}\n\n/*.multiselect--active:not(.multiselect--above) .multiselect__current,*/\n/*.multiselect--active:not(.multiselect--above) .multiselect__input,*/\n/*.multiselect--active:not(.multiselect--above) .multiselect__tags {*/\n/*   border-radius: 5px;*/\n/*}*/\n\n.multiselect--active .multiselect__select {\n    transform: rotateZ(180deg);\n}\n\n.multiselect--above.multiselect--active .multiselect__current,\n.multiselect--above.multiselect--active .multiselect__input,\n.multiselect--above.multiselect--active .multiselect__tags {\n    /*border: 0;*/\n    /*border-top-left-radius: 0;*/\n    /*border-top-right-radius: 0;*/\n}\n\n.multiselect__input,\n.multiselect__single {\n    position: relative;\n    display: inline-block;\n    min-height: 20px;\n    line-height: 20px;\n    width: calc(100%);\n    transition: border 0.1s ease;\n    box-sizing: border-box;\n    vertical-align: top;\n}\n\n.multiselect__input::placeholder {\n    color: #35495e;\n}\n\n.multiselect__tag ~ .multiselect__input,\n.multiselect__tag ~ .multiselect__single {\n    width: auto;\n}\n\n.multiselect__input:hover,\n.multiselect__single:hover {\n    border-color: #cfcfcf;\n}\n\n.multiselect__input:focus,\n.multiselect__single:focus {\n    border-color: #a8a8a8;\n    outline: none;\n}\n\n.multiselect__single {\n    padding-left: 5px;\n    margin-bottom: 8px;\n}\n\n.multiselect__tags-wrap {\n    display: inline;\n}\n\n.multiselect__tags {\n    min-height: 40px;\n    display: block;\n    padding: 8px 40px 0 8px;\n    border-radius: 5px;\n    border: 1px solid #e8e8e8;\n    /*background: #fff;*/\n    font-size: 14px;\n}\n\n.multiselect__tag {\n    position: relative;\n    display: inline-block;\n    padding: 4px 26px 4px 10px;\n    border-radius: 5px;\n    margin-right: 10px;\n    color: #fff;\n    line-height: 1;\n    background: #41b883;\n    margin-bottom: 5px;\n    white-space: nowrap;\n    overflow: hidden;\n    max-width: 100%;\n    text-overflow: ellipsis;\n}\n\n.multiselect__tag-icon {\n    cursor: pointer;\n    margin-left: 7px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    font-weight: 700;\n    font-style: initial;\n    width: 22px;\n    text-align: center;\n    line-height: 22px;\n    transition: all 0.2s ease;\n    border-radius: 5px;\n}\n\n.multiselect__tag-icon::after {\n    content: \"×\";\n    color: #266d4d;\n    font-size: 14px;\n}\n\n/* // Remove these lines to avoid green closing button\n//.multiselect__tag-icon:focus,\n//.multiselect__tag-icon:hover {\n//  background: #369a6e;\n//} */\n\n.multiselect__tag-icon:focus::after,\n.multiselect__tag-icon:hover::after {\n    color: white;\n}\n\n.multiselect__current {\n    line-height: 16px;\n    min-height: 40px;\n    box-sizing: border-box;\n    display: block;\n    overflow: hidden;\n    padding: 8px 12px 0;\n    padding-right: 30px;\n    white-space: nowrap;\n    margin: 0;\n    text-decoration: none;\n    border-radius: 5px;\n    border: 1px solid #e8e8e8;\n    cursor: pointer;\n}\n\n.multiselect__select {\n    line-height: 16px;\n    display: block;\n    position: absolute;\n    box-sizing: border-box;\n    width: 40px;\n    height: 38px;\n    right: 1px;\n    top: 1px;\n    padding: 4px 8px;\n    margin: 0;\n    text-decoration: none;\n    text-align: center;\n    cursor: pointer;\n    transition: transform 0.2s ease;\n}\n\n.multiselect__select::before {\n    position: relative;\n    right: 0;\n    top: 65%;\n    color: #999;\n    margin-top: 4px;\n    border-style: solid;\n    border-width: 5px 5px 0 5px;\n    border-color: #999 transparent transparent transparent;\n    content: \"\";\n}\n\n/*.multiselect__placeholder {*/\n/*    color: #adadad;*/\n/*    display: inline-block;*/\n/*    margin-bottom: 10px;*/\n/*    padding-top: 2px;*/\n/*}*/\n\n.multiselect--active .multiselect__placeholder {\n    display: none;\n}\n\n.multiselect__content-wrapper {\n    position: absolute;\n    display: block;\n    background: #fff;\n    width: 100%;\n    max-height: 240px;\n    overflow: auto;\n    z-index: 50;\n    -webkit-overflow-scrolling: touch;\n}\n\n.multiselect__content {\n    list-style: none;\n    display: inline-block;\n    padding: 0;\n    margin: 0;\n    min-width: 100%;\n    vertical-align: top;\n}\n\n.multiselect--above .multiselect__content-wrapper {\n    bottom: 100%;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n    border-bottom: none;\n    border-top: 1px solid #e8e8e8;\n}\n\n.multiselect__content::-webkit-scrollbar {\n    display: none;\n}\n\n.multiselect__element {\n    display: block;\n}\n\n.multiselect__option {\n    display: block;\n    padding: 12px;\n    min-height: 40px;\n    line-height: 16px;\n    text-decoration: none;\n    text-transform: none;\n    vertical-align: middle;\n    position: relative;\n    cursor: pointer;\n    white-space: nowrap;\n}\n\n.multiselect__option::after {\n    top: 0;\n    right: 0;\n    position: absolute;\n    line-height: 40px;\n    padding-right: 12px;\n    padding-left: 20px;\n    font-size: 13px;\n}\n\n.multiselect__option--highlight {\n    background: rgb(29 78 216 / var(--tw-bg-opacity));\n    outline: none;\n    color: white;\n}\n\n.multiselect__option--highlight::after {\n    content: attr(data-select);\n    background: rgb(29 78 216 / var(--tw-bg-opacity));\n    color: white;\n}\n\n.multiselect__option--selected {\n    background: rgb(29 78 216 / var(--tw-bg-opacity));\n    color: white;\n    font-weight: bold;\n}\n\n.multiselect__option--selected::after {\n    content: attr(data-selected);\n    color: silver;\n}\n\n.multiselect__option--selected.multiselect__option--highlight {\n    background: #ff6a6a;\n    color: #fff;\n}\n\n.multiselect__option--selected.multiselect__option--highlight::after {\n    background: #ff6a6a;\n    content: attr(data-deselect);\n    color: #fff;\n}\n\n.multiselect--disabled .multiselect__current,\n.multiselect--disabled .multiselect__select {\n    background: #ededed;\n    color: #a6a6a6;\n}\n\n.multiselect__option--disabled {\n    background: #ededed !important;\n    color: #a6a6a6 !important;\n    cursor: text;\n    pointer-events: none;\n}\n\n.multiselect__option--group {\n    background: #ededed;\n    color: #35495e;\n}\n\n.multiselect__option--group.multiselect__option--highlight {\n    background: #35495e;\n    color: #fff;\n}\n\n.multiselect__option--group.multiselect__option--highlight::after {\n    background: #35495e;\n}\n\n.multiselect__option--disabled.multiselect__option--highlight {\n    background: #dedede;\n}\n\n.multiselect__option--group-selected.multiselect__option--highlight {\n    background: #ff6a6a;\n    color: #fff;\n}\n\n.multiselect__option--group-selected.multiselect__option--highlight::after {\n    background: #ff6a6a;\n    content: attr(data-deselect);\n    color: #fff;\n}\n\n.multiselect-enter-active,\n.multiselect-leave-active {\n    transition: all 0.15s ease;\n}\n\n.multiselect-enter,\n.multiselect-leave-active {\n    opacity: 0;\n}\n\n.multiselect__strong {\n    margin-bottom: 8px;\n    line-height: 20px;\n    display: inline-block;\n    vertical-align: top;\n}\n\n*[dir=\"rtl\"] .multiselect {\n    text-align: right;\n}\n\n*[dir=\"rtl\"] .multiselect__select {\n    right: auto;\n    left: 1px;\n}\n\n*[dir=\"rtl\"] .multiselect__tags {\n    padding: 8px 8px 0 40px;\n}\n\n*[dir=\"rtl\"] .multiselect__content {\n    text-align: right;\n}\n\n*[dir=\"rtl\"] .multiselect__option::after {\n    right: auto;\n    left: 0;\n}\n\n*[dir=\"rtl\"] .multiselect__clear {\n    right: auto;\n    left: 12px;\n}\n\n*[dir=\"rtl\"] .multiselect__spinner {\n    right: auto;\n    left: 1px;\n}\n\n@keyframes spinning {\n    from {\n        transform: rotate(0);\n    }\n\n    to {\n        transform: rotate(2turn);\n    }\n}\n</style>\n"],"names":["isEmpty","opt","not","fun","params","includes","str","query","filterOptions","options","search","label","customLabel","option","a","b","stripGroups","flattenOptions","values","prev","curr","filterGroups","groupLabel","groups","group","groupOptions","flow","fns","x","v","f","multiselectMixin","normalizedSearch","element","key","selectedGroup","newValue","optionsToAdd","shouldClose","index","spaceAbove","spaceBelow","pointerMixin","_sfc_main","count","_hoisted_3","_hoisted_7","_hoisted_11","_hoisted_15","_hoisted_16","_createElementBlock","_ctx","$props","$options","_cache","$event","_withKeys","_withModifiers","_renderSlot","_createElementVNode","_hoisted_2","_withDirectives","_openBlock","_Fragment","_renderList","_toDisplayString","_vShow","_createVNode","_Transition","args","_hoisted_10"],"mappings":"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"}